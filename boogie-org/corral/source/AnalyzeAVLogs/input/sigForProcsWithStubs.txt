AddAccessAllowedAce({:pointer} {:ptr "Mem_T._ACL"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} x3: int) returns ({:scalar} r: int);
AddAccessDeniedAce({:pointer} {:ptr "Mem_T._ACL"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} x3: int) returns ({:scalar} r: int);
AddAce({:pointer} {:ptr "Mem_T._ACL"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
AdjustTokenPrivileges({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T._TOKEN_PRIVILEGES"} {:ref "Mem_T._TOKEN_PRIVILEGES"} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T._TOKEN_PRIVILEGES"} x4: int, {:pointer} {:ptr "Mem_T.INT4"} x5: int) returns ({:scalar} r: int);
AlpcRegisterLogRoutine({:scalar} x0: int) returns ({:scalar} r: int);
AlpcUnregisterLogRoutine({:scalar} x0: int) returns ({:scalar} r: int);
AtlThunk_AllocateData() returns ({:pointer} r: int);
AtlThunk_DataToCode({:pointer} {:ptr "Mem_T.AtlThunkData_t"} x0: int) returns ({:scalar} r: int);
AtlThunk_FreeData({:pointer} {:ptr "Mem_T.AtlThunkData_t"} x0: int);
AtlThunk_InitData({:pointer} {:ptr "Mem_T.AtlThunkData_t"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int);
BCryptCloseAlgorithmProvider({:pointer} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
BCryptCreateHash({:pointer} x0: int, {:pointer} {:ref "Mem_T._SINGLE_LIST_ENTRY"} x1: int, {:pointer} x2: int, {:scalar} x3: int, {:pointer} {:ref "Mem_T.VOID"} x4: int, {:scalar} x5: int, {:scalar} x6: int) returns ({:scalar} r: int);
BCryptDestroyHash({:pointer} x0: int) returns ({:scalar} r: int);
BCryptFinishHash({:pointer} x0: int, {:pointer} {:ref "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
BCryptGenRandom({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
BCryptHashData({:pointer} x0: int, {:pointer} {:ref "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
BCryptOpenAlgorithmProvider({:pointer} {:ref "Mem_T._SINGLE_LIST_ENTRY"} x0: int, {:pointer} x1: int, {:pointer} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
BstrFromVector({:pointer} {:ptr "Mem_T.tagSAFEARRAY"} x0: int, {:pointer} {:ptr "Mem_T.PINT4"} {:ref "Mem_T.PINT4"} x1: int) returns ({:scalar} r: int);
CLSIDFromProgID({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T._GUID"} {:ref "Mem_T._GUID"} x1: int) returns ({:scalar} r: int);
CLSIDFromString({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T._GUID"} x1: int) returns ({:scalar} r: int);
CancelWaitableTimer({:pointer} x0: int) returns ({:scalar} r: int);
ChangerClassAllocatePool({:scalar} x0: int, {:scalar} x1: int) returns ({:pointer} r: int);
ChangerClassFreePool({:pointer} {:ptr "Mem_T.VOID"} x0: int);
ChangerClassInitialize({:pointer} {:ptr "Mem_T._DRIVER_OBJECT"} x0: int, {:pointer} {:ptr "Mem_T._UNICODE_STRING"} x1: int, {:pointer} {:ptr "Mem_T._MCD_INIT_DATA"} {:ref "Mem_T._MCD_INIT_DATA"} x2: int) returns ({:scalar} r: int);
ChangerClassSendSrbSynchronous({:pointer} {:ptr "Mem_T._DEVICE_OBJECT"} x0: int, {:pointer} {:ptr "Mem_T._SCSI_REQUEST_BLOCK"} {:ref "Mem_T._SCSI_REQUEST_BLOCK"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:scalar} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
CharLowerBuffW({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
CharLowerW({:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x0: int) returns ({:pointer} r: int);
CharNextA({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:pointer} r: int);
CharNextW({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:pointer} r: int);
CharUpperBuffW({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
CharUpperW({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:pointer} r: int);
CloseHandle({:pointer} x0: int) returns ({:scalar} r: int);
CloseTdiLink({:pointer} x0: int);
CloseThreadpoolWait({:pointer} x0: int);
CmCallbackGetKeyObjectID({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.INT4"} x2: int, {:pointer} {:ptr "Mem_T.P_UNICODE_STRING"} {:ref "Mem_T.P_UNICODE_STRING"} x3: int) returns ({:scalar} r: int);
CmEtwRunDown({:pointer} {:ptr "Mem_T._ETW_SILODRIVERSTATE"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
CmRegisterCallbackEx({:scalar} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x2: int, {:pointer} {:ptr "Mem_T.VOID"} x3: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x4: int, {:pointer} {:ptr "Mem_T.VOID"} x5: int) returns ({:scalar} r: int);
CmSetTraceNotifyRoutines({:scalar} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
CmUnRegisterCallback({:scalar} x0: int) returns ({:scalar} r: int);
CoCreateInstance({:pointer} {:ptr "Mem_T._GUID"} {:ref "Mem_T._GUID"} x0: int, {:pointer} {:ptr "Mem_T.IUnknown"} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T._GUID"} {:ref "Mem_T._GUID"} x3: int, {:pointer} {:ptr "Mem_T.PVOID"} {:ref "Mem_T.PVOID"} x4: int) returns ({:scalar} r: int);
CoGetInterfaceAndReleaseStream({:pointer} {:ptr "Mem_T.IStream"} x0: int, {:pointer} {:ptr "Mem_T._GUID"} x1: int, {:pointer} {:ptr "Mem_T.PVOID"} {:ref "Mem_T.PVOID"} x2: int) returns ({:scalar} r: int);
CoGetMalloc({:scalar} x0: int, {:pointer} {:ptr "Mem_T.PIMalloc"} {:ref "Mem_T.PIMalloc"} x1: int) returns ({:scalar} r: int);
CoInitialize({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
CoMarshalInterThreadInterfaceInStream({:pointer} {:ptr "Mem_T._GUID"} x0: int, {:pointer} {:ptr "Mem_T.IUnknown"} x1: int, {:pointer} {:ptr "Mem_T.PIStream"} {:ref "Mem_T.PIStream"} x2: int) returns ({:scalar} r: int);
CoMarshalInterface({:pointer} {:ptr "Mem_T.IStream"} x0: int, {:pointer} {:ptr "Mem_T._GUID"} x1: int, {:pointer} {:ptr "Mem_T.IUnknown"} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T.VOID"} x4: int, {:scalar} x5: int) returns ({:scalar} r: int);
CoRegisterClassObject({:pointer} {:ptr "Mem_T._GUID"} x0: int, {:pointer} {:ptr "Mem_T.IUnknown"} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x4: int) returns ({:scalar} r: int);
CoRevokeClassObject({:scalar} x0: int) returns ({:scalar} r: int);
CoTaskMemAlloc({:scalar} x0: int) returns ({:pointer} r: int);
CoTaskMemFree({:pointer} {:ptr "Mem_T.VOID"} x0: int);
CoTaskMemRealloc({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int) returns ({:pointer} r: int);
CoUninitialize();
CompareStringW({:scalar} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T.VOID"} x4: int, {:scalar} x5: int) returns ({:scalar} r: int);
ConnectionGetBuffer({:pointer} x0: int, {:scalar} x1: int) returns ({:pointer} r: int);
ConnectionGetFileObject({:pointer} x0: int) returns ({:pointer} r: int);
ConnectionReleaseFileObject({:pointer} x0: int, {:pointer} x1: int);
ConvertSidToStringSidW({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.PINT4"} {:ref "Mem_T.PINT4"} x1: int) returns ({:scalar} r: int);
CopySid({:scalar} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int) returns ({:scalar} r: int);
CreateDirectoryW({:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x0: int, {:pointer} {:ptr "Mem_T._SECURITY_ATTRIBUTES"} x1: int) returns ({:scalar} r: int);
CreateErrorInfo({:pointer} {:ptr "Mem_T.PICreateErrorInfo"} {:ref "Mem_T.PICreateErrorInfo"} x0: int) returns ({:scalar} r: int);
CreateEventA({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} x3: int) returns ({:pointer} r: int);
CreateEventW({:pointer} {:ptr "Mem_T._SECURITY_ATTRIBUTES"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.INT4"} x3: int) returns ({:pointer} r: int);
CreateFileW({:pointer} {:ref "Mem_T.INT4"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} x3: int, {:scalar} x4: int, {:scalar} x5: int, {:pointer} x6: int) returns ({:pointer} r: int);
CreateMutexW({:pointer} {:ptr "Mem_T._SECURITY_ATTRIBUTES"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int) returns ({:pointer} r: int);
CreateStreamOnHGlobal({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.PIStream"} {:ref "Mem_T.PIStream"} x2: int) returns ({:scalar} r: int);
CreateTdiLink({:scalar} x0: int, {:pointer} x1: int, {:pointer} x2: int, {:pointer} x3: int, {:scalar} x4: int, {:scalar} x5: int, {:pointer} {:ref "Mem_T.PVOID"} x6: int, {:pointer} x7: int, {:scalar} x8: int, {:scalar} x9: int, {:scalar} x10: int, {:scalar} x11: int, {:scalar} x12: int, {:scalar} x13: int, {:scalar} x14: int) returns ({:scalar} r: int);
CreateThread({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} x3: int, {:scalar} x4: int, {:pointer} x5: int) returns ({:pointer} r: int);
CreateThreadpoolWait({:scalar} x0: int, {:pointer} x1: int, {:pointer} x2: int) returns ({:pointer} r: int);
CreateWaitableTimerA({:pointer} x0: int, {:scalar} x1: int, {:pointer} x2: int) returns ({:pointer} r: int);
CreateWindowExW({:scalar} x0: int, {:pointer} {:ptr "Mem_T.INT4"} x1: int, {:pointer} {:ptr "Mem_T.INT4"} x2: int, {:scalar} x3: int, {:scalar} x4: int, {:scalar} x5: int, {:scalar} x6: int, {:scalar} x7: int, {:pointer} {:ptr "Mem_T.HWND__"} x8: int, {:pointer} {:ptr "Mem_T.HMENU__"} x9: int, {:pointer} {:ptr "Mem_T.HINSTANCE__"} x10: int, {:pointer} {:ptr "Mem_T.VOID"} x11: int) returns ({:pointer} r: int);
CreateXmlReader({:pointer} {:ptr "Mem_T._GUID"} {:ref "Mem_T._GUID"} x0: int, {:pointer} {:ptr "Mem_T.PVOID"} {:ref "Mem_T.PVOID"} x1: int, {:pointer} {:ptr "Mem_T.IMalloc"} x2: int) returns ({:scalar} r: int);
DPA_DestroyCallback({:pointer} x0: int, {:scalar} x1: int, {:pointer} x2: int);
DPA_EnumCallback({:pointer} x0: int, {:scalar} x1: int, {:pointer} x2: int);
DPA_Merge({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:scalar} x4: int, {:scalar} x5: int) returns ({:scalar} r: int);
DPA_Search({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:scalar} x4: int, {:scalar} x5: int) returns ({:scalar} r: int);
DPA_Sort({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
DSA_DestroyCallback({:pointer} x0: int, {:scalar} x1: int, {:pointer} x2: int);
DSA_EnumCallback({:pointer} x0: int, {:scalar} x1: int, {:pointer} x2: int);
DSA_Sort({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
DbgBreakPointWithStatus({:scalar} x0: int);
DbgPrint({:pointer} x0: int) returns ({:scalar} r: int);
DbgPrintEx({:scalar} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.INT4"} x2: int) returns ({:scalar} r: int);
DbgRaiseAssertionFailure();
DbgSetDebugPrintCallback({:scalar} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
DebugBreak();
DebugCreate({:pointer} {:ref "Mem_T._GUID"} x0: int, {:pointer} {:ref "Mem_T.PVOID"} x1: int) returns ({:scalar} r: int);
DefWindowProcW({:pointer} {:ptr "Mem_T.HWND__"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
DeleteAce({:pointer} {:ptr "Mem_T._ACL"} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
DeleteCriticalSection({:pointer} {:ref "Mem_T._RTL_CRITICAL_SECTION"} x0: int);
DeleteFileW({:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x0: int) returns ({:scalar} r: int);
DeviceIoControl({:pointer} x0: int, {:scalar} x1: int, {:pointer} {:ref "Mem_T.VOID"} x2: int, {:scalar} x3: int, {:pointer} {:ref "Mem_T.VOID"} x4: int, {:scalar} x5: int, {:pointer} {:ref "Mem_T.INT4"} x6: int, {:pointer} x7: int) returns ({:scalar} r: int);
DisableThreadLibraryCalls({:pointer} {:ptr "Mem_T.HINSTANCE__"} x0: int) returns ({:scalar} r: int);
DispatchMessageA({:pointer} {:ptr "Mem_T.tagMSG"} {:ref "Mem_T.tagMSG"} x0: int) returns ({:scalar} r: int);
DispatchMessageW({:pointer} {:ptr "Mem_T.tagMSG"} {:ref "Mem_T.tagMSG"} x0: int) returns ({:scalar} r: int);
DosDateTimeToVariantTime({:scalar} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x2: int) returns ({:scalar} r: int);
DuplicateTokenEx({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T._SECURITY_ATTRIBUTES"} x2: int, {:scalar} x3: int, {:scalar} x4: int, {:pointer} {:ptr "Mem_T.PVOID"} {:ref "Mem_T.PVOID"} x5: int) returns ({:scalar} r: int);
EnterCriticalSection({:pointer} {:ref "Mem_T._RTL_CRITICAL_SECTION"} x0: int);
EqualSid({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int) returns ({:scalar} r: int);
EtwpFreeSoftRestartContext({:pointer} {:ptr "Mem_T._WMI_LOGGER_CONTEXT"} x0: int);
EtwpGetSoftRestartInformation({:pointer} {:ptr "Mem_T._EVENT_TRACE_SOFT_RESTART_INFORMATION"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.INT4"} x2: int) returns ({:scalar} r: int);
EtwpInitializeKsrSupport();
EtwpSavePersistedLoggers();
EtwpSetSoftRestartInformation({:pointer} {:ptr "Mem_T._EVENT_TRACE_SOFT_RESTART_INFORMATION"} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
EventRegister({:pointer} {:ptr "Mem_T._GUID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:pointer} {:ptr "Mem_T.INT4"} x3: int) returns ({:scalar} r: int);
EventSetInformation({:scalar} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
EventUnregister({:scalar} x0: int) returns ({:scalar} r: int);
EventWrite({:scalar} x0: int, {:pointer} {:ptr "Mem_T._EVENT_DESCRIPTOR"} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T._EVENT_DATA_DESCRIPTOR"} x3: int) returns ({:scalar} r: int);
EventWriteEx({:scalar} x0: int, {:pointer} {:ptr "Mem_T._EVENT_DESCRIPTOR"} {:ref "Mem_T._EVENT_DESCRIPTOR"} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T._GUID"} x4: int, {:pointer} {:ptr "Mem_T._GUID"} x5: int, {:scalar} x6: int, {:pointer} {:ptr "Mem_T._EVENT_DATA_DESCRIPTOR"} x7: int) returns ({:scalar} r: int);
EventWriteTransfer({:scalar} x0: int, {:pointer} {:ptr "Mem_T._EVENT_DESCRIPTOR"} {:ref "Mem_T._EVENT_DESCRIPTOR"} x1: int, {:pointer} {:ptr "Mem_T._GUID"} x2: int, {:pointer} {:ptr "Mem_T._GUID"} x3: int, {:scalar} x4: int, {:pointer} {:ptr "Mem_T._EVENT_DATA_DESCRIPTOR"} x5: int) returns ({:scalar} r: int);
ExAcquireFastMutex({:pointer} x0: int);
ExAcquirePushLockExclusiveEx({:pointer} {:ptr "Mem_T._EX_PUSH_LOCK"} {:ref "Mem_T._EX_PUSH_LOCK"} x0: int, {:scalar} x1: int);
ExAcquirePushLockSharedEx({:pointer} {:ptr "Mem_T._EX_PUSH_LOCK"} {:ref "Mem_T._EX_PUSH_LOCK"} x0: int, {:scalar} x1: int);
ExAcquireResourceExclusiveLite({:pointer} {:ptr "Mem_T._ERESOURCE"} {:ref "Mem_T._ERESOURCE"} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
ExAcquireResourceSharedLite({:pointer} {:ptr "Mem_T._ERESOURCE"} {:ref "Mem_T._ERESOURCE"} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
ExAcquireRundownProtection({:pointer} {:ptr "Mem_T._EX_RUNDOWN_REF"} {:ref "Mem_T._EX_RUNDOWN_REF"} x0: int) returns ({:scalar} r: int);
ExAcquireRundownProtectionCacheAwareEx({:pointer} {:ptr "Mem_T._EX_RUNDOWN_REF_CACHE_AWARE"} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
ExAcquireSpinLockExclusive({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
ExAcquireSpinLockShared({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
ExAllocateCacheAwareRundownProtection({:scalar} x0: int, {:scalar} x1: int) returns ({:pointer} r: int);
ExAllocatePoolWithQuotaTag({:scalar} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:pointer} r: int);
ExAllocatePoolWithTag({:scalar} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:pointer} r: int);
ExAllocateTimer({:scalar} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int) returns ({:pointer} r: int);
ExCancelTimer({:pointer} {:ptr "Mem_T._EX_TIMER"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int) returns ({:scalar} r: int);
ExCheckSingleFilter({:scalar} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
ExConvertExclusiveToSharedLite({:pointer} {:ptr "Mem_T._ERESOURCE"} {:ref "Mem_T._ERESOURCE"} x0: int);
ExDeleteNPagedLookasideList({:pointer} {:ref "Mem_T._NPAGED_LOOKASIDE_LIST"} x0: int);
ExDeleteResourceLite({:pointer} {:ptr "Mem_T._ERESOURCE"} {:ref "Mem_T._ERESOURCE"} x0: int) returns ({:scalar} r: int);
ExDeleteTimer({:pointer} {:ptr "Mem_T._EX_TIMER"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T._EXT_DELETE_PARAMETERS"} {:ref "Mem_T._EXT_DELETE_PARAMETERS"} x3: int) returns ({:scalar} r: int);
ExEnumHandleTable({:pointer} {:ptr "Mem_T._HANDLE_TABLE"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x3: int) returns ({:scalar} r: int);
ExFreeCacheAwareRundownProtection({:pointer} {:ptr "Mem_T._EX_RUNDOWN_REF_CACHE_AWARE"} x0: int);
ExFreePool({:pointer} x0: int);
ExFreePoolWithTag({:pointer} x0: int, {:scalar} x1: int);
ExGenRandom({:scalar} x0: int) returns ({:scalar} r: int);
ExGetBigPoolInfo({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x3: int) returns ({:scalar} r: int);
ExGetPoolTagInfo({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x2: int) returns ({:scalar} r: int);
ExGetSessionPoolTagInfo({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x2: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x3: int) returns ({:scalar} r: int);
ExInitializeNPagedLookasideList({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:scalar} x4: int, {:scalar} x5: int, {:scalar} x6: int);
ExInitializeResourceLite({:pointer} {:ptr "Mem_T._ERESOURCE"} {:ref "Mem_T._ERESOURCE"} x0: int) returns ({:scalar} r: int);
ExInitializeRundownProtection({:pointer} {:ptr "Mem_T._EX_RUNDOWN_REF"} {:ref "Mem_T._EX_RUNDOWN_REF"} x0: int);
ExInterlockedFlushSList({:pointer} {:ref "Mem_T._SLIST_HEADER"} x0: int) returns ({:pointer} r: int);
ExInterlockedPopEntrySList({:pointer} {:ref "Mem_T._SLIST_HEADER"} x0: int, {:pointer} {:ref "Mem_T.VOID"} x1: int) returns ({:pointer} r: int);
ExInterlockedPushEntrySList({:pointer} {:ref "Mem_T._SLIST_HEADER"} x0: int, {:pointer} x1: int, {:pointer} {:ref "Mem_T.VOID"} x2: int) returns ({:pointer} r: int);
ExIsResourceAcquiredExclusiveLite({:pointer} {:ptr "Mem_T._ERESOURCE"} x0: int) returns ({:scalar} r: int);
ExIsSoftBoot() returns ({:scalar} r: int);
ExLockUserBuffer({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x4: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x5: int) returns ({:scalar} r: int);
ExQueueWorkItem({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:scalar} x1: int);
ExRaiseDatatypeMisalignment();
ExRaiseStatus({:scalar} x0: int);
ExReInitializeRundownProtectionCacheAware({:pointer} {:ptr "Mem_T._EX_RUNDOWN_REF_CACHE_AWARE"} x0: int);
ExRegisterCallback({:pointer} {:ptr "Mem_T._CALLBACK_OBJECT"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int) returns ({:pointer} r: int);
ExReleaseFastMutex({:pointer} x0: int);
ExReleasePushLockEx({:pointer} {:ptr "Mem_T._EX_PUSH_LOCK"} {:ref "Mem_T._EX_PUSH_LOCK"} x0: int, {:scalar} x1: int);
ExReleasePushLockExclusiveEx({:pointer} {:ptr "Mem_T._EX_PUSH_LOCK"} {:ref "Mem_T._EX_PUSH_LOCK"} x0: int, {:scalar} x1: int);
ExReleasePushLockSharedEx({:pointer} {:ptr "Mem_T._EX_PUSH_LOCK"} {:ref "Mem_T._EX_PUSH_LOCK"} x0: int, {:scalar} x1: int);
ExReleaseResourceLite({:pointer} {:ptr "Mem_T._ERESOURCE"} {:ref "Mem_T._ERESOURCE"} x0: int);
ExReleaseRundownProtection({:pointer} {:ptr "Mem_T._EX_RUNDOWN_REF"} {:ref "Mem_T._EX_RUNDOWN_REF"} x0: int);
ExReleaseRundownProtectionCacheAwareEx({:pointer} {:ptr "Mem_T._EX_RUNDOWN_REF_CACHE_AWARE"} x0: int, {:scalar} x1: int);
ExReleaseSpinLockExclusive({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:scalar} x1: int);
ExReleaseSpinLockShared({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:scalar} x1: int);
ExSetTimer({:pointer} {:ptr "Mem_T._EX_TIMER"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T._EXT_SET_PARAMETERS_V0"} {:ref "Mem_T._EXT_SET_PARAMETERS_V0"} x3: int) returns ({:scalar} r: int);
ExUnlockHandleTableEntry({:pointer} {:ptr "Mem_T._HANDLE_TABLE"} x0: int, {:pointer} {:ptr "Mem_T._HANDLE_TABLE_ENTRY"} x1: int);
ExUnlockUserBuffer({:pointer} {:ptr "Mem_T.VOID"} x0: int);
ExUuidCreate({:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x0: int) returns ({:scalar} r: int);
ExWaitForRundownProtectionRelease({:pointer} {:ptr "Mem_T._EX_RUNDOWN_REF"} {:ref "Mem_T._EX_RUNDOWN_REF"} x0: int);
ExWaitForRundownProtectionReleaseCacheAware({:pointer} {:ptr "Mem_T._EX_RUNDOWN_REF_CACHE_AWARE"} x0: int);
ExfAcquirePushLockExclusive({:pointer} {:ptr "Mem_T._EX_PUSH_LOCK"} x0: int);
ExfAcquirePushLockShared({:pointer} {:ptr "Mem_T._EX_PUSH_LOCK"} x0: int);
ExfAcquireReleasePushLockExclusive({:pointer} {:ptr "Mem_T._EX_PUSH_LOCK"} x0: int);
ExfReleasePushLock({:pointer} {:ptr "Mem_T._EX_PUSH_LOCK"} x0: int);
ExfReleasePushLockShared({:pointer} {:ptr "Mem_T._EX_PUSH_LOCK"} x0: int);
ExfTryAcquirePushLockShared({:pointer} {:ptr "Mem_T._EX_PUSH_LOCK"} x0: int) returns ({:scalar} r: int);
ExfTryToWakePushLock({:pointer} {:ptr "Mem_T._EX_PUSH_LOCK"} x0: int);
ExfUnblockPushLock({:pointer} {:ptr "Mem_T._EX_PUSH_LOCK"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int);
ExitThread({:scalar} x0: int);
ExpGetHandleExtraInfo({:pointer} {:ptr "Mem_T._HANDLE_TABLE"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int) returns ({:pointer} r: int);
FileTimeToLocalFileTime({:pointer} {:ptr "Mem_T._FILETIME"} x0: int, {:pointer} {:ptr "Mem_T._FILETIME"} {:ref "Mem_T._FILETIME"} x1: int) returns ({:scalar} r: int);
FileTimeToSystemTime({:pointer} {:ptr "Mem_T._FILETIME"} x0: int, {:pointer} {:ptr "Mem_T._SYSTEMTIME"} {:ref "Mem_T._SYSTEMTIME"} x1: int) returns ({:scalar} r: int);
FindClose({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
FindFirstFileW({:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x0: int, {:pointer} {:ptr "Mem_T._WIN32_FIND_DATAW"} {:ref "Mem_T._WIN32_FIND_DATAW"} x1: int) returns ({:pointer} r: int);
FindResourceExW({:pointer} {:ptr "Mem_T.HINSTANCE__"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:scalar} x3: int) returns ({:pointer} r: int);
FindWindowW({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int) returns ({:pointer} r: int);
FormatMessageA({:scalar} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x4: int, {:scalar} x5: int, {:pointer} {:ptr "Mem_T.PINT4"} {:ref "Mem_T.PINT4"} x6: int) returns ({:scalar} r: int);
FormatMessageW({:scalar} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T.VOID"} x4: int, {:scalar} x5: int, {:pointer} {:ptr "Mem_T.PINT4"} {:ref "Mem_T.PINT4"} x6: int) returns ({:scalar} r: int);
FreeLibrary({:pointer} x0: int) returns ({:scalar} r: int);
FsRtlGetFileNameInformation({:pointer} {:ptr "Mem_T._FILE_OBJECT"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x2: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x3: int) returns ({:scalar} r: int);
FsRtlReleaseFileNameInformation({:pointer} {:ptr "Mem_T.VOID"} x0: int);
FxIFR({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
FxWmiTraceMessage({:scalar} x0: int, {:scalar} x1: int, {:pointer} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
GetAce({:pointer} {:ptr "Mem_T._ACL"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.PVOID"} {:ref "Mem_T.PVOID"} x2: int) returns ({:scalar} r: int);
GetAclInformation({:pointer} {:ptr "Mem_T._ACL"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
GetComputerNameExW({:scalar} x0: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x1: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x2: int) returns ({:scalar} r: int);
GetCurrentConnection({:pointer} x0: int) returns ({:pointer} r: int);
GetCurrentProcess() returns ({:pointer} r: int);
GetCurrentThread() returns ({:pointer} r: int);
GetCurrentThreadId() returns ({:scalar} r: int);
GetEnvironmentVariableW({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
GetFileAttributesW({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
GetFileSize({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int) returns ({:scalar} r: int);
GetFullPathNameW({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x2: int, {:pointer} {:ptr "Mem_T.PINT4"} {:ref "Mem_T.PINT4"} x3: int) returns ({:scalar} r: int);
GetKernelObjectSecurity({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x4: int) returns ({:scalar} r: int);
GetLastError() returns ({:scalar} r: int);
GetLengthSid({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
GetLocalTime({:pointer} {:ptr "Mem_T._SYSTEMTIME"} {:ref "Mem_T._SYSTEMTIME"} x0: int);
GetMessageA({:pointer} {:ptr "Mem_T.tagMSG"} {:ref "Mem_T.tagMSG"} x0: int, {:pointer} {:ptr "Mem_T.HWND__"} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
GetMessageW({:pointer} {:ptr "Mem_T.tagMSG"} {:ref "Mem_T.tagMSG"} x0: int, {:pointer} {:ptr "Mem_T.HWND__"} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
GetModuleFileNameW({:pointer} {:ptr "Mem_T.HINSTANCE__"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
GetModuleHandleW({:pointer} x0: int) returns ({:pointer} r: int);
GetOverlappedResult({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T._OVERLAPPED"} {:ref "Mem_T._OVERLAPPED"} x1: int, {:pointer} {:ptr "Mem_T.INT4"} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
GetProcAddress({:pointer} x0: int, {:pointer} x1: int) returns ({:scalar} r: int);
GetProcessHeap() returns ({:pointer} r: int);
GetSecurityDescriptorDacl({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.P_ACL"} {:ref "Mem_T.P_ACL"} x2: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x3: int) returns ({:scalar} r: int);
GetSecurityDescriptorGroup({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.PVOID"} {:ref "Mem_T.PVOID"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x2: int) returns ({:scalar} r: int);
GetSecurityDescriptorOwner({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.PVOID"} {:ref "Mem_T.PVOID"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x2: int) returns ({:scalar} r: int);
GetSecurityDescriptorSacl({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.P_ACL"} {:ref "Mem_T.P_ACL"} x2: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x3: int) returns ({:scalar} r: int);
GetStringTypeExW({:scalar} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T.VOID"} x4: int) returns ({:scalar} r: int);
GetSystemTimeAsFileTime({:pointer} {:ptr "Mem_T._FILETIME"} {:ref "Mem_T._FILETIME"} x0: int);
GetThreadLocale() returns ({:scalar} r: int);
GetTickCount() returns ({:scalar} r: int);
GetTickCount64() returns ({:scalar} r: int);
GetTimeZoneInformation({:pointer} {:ptr "Mem_T._TIME_ZONE_INFORMATION"} {:ref "Mem_T._TIME_ZONE_INFORMATION"} x0: int) returns ({:scalar} r: int);
GetTokenInformation({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x4: int) returns ({:scalar} r: int);
GetTraceEnableFlags({:scalar} x0: int) returns ({:scalar} r: int);
GetTraceEnableLevel({:scalar} x0: int) returns ({:scalar} r: int);
GetTraceLoggerHandle({:pointer} x0: int) returns ({:scalar} r: int);
GetUserNameExW({:scalar} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x2: int) returns ({:scalar} r: int);
GetVersionExA({:pointer} {:ref "Mem_T._OSVERSIONINFOA"} x0: int) returns ({:scalar} r: int);
GetVersionExW({:pointer} {:ref "Mem_T._OSVERSIONINFOW"} x0: int) returns ({:scalar} r: int);
GlobalAlloc({:scalar} x0: int, {:scalar} x1: int) returns ({:pointer} r: int);
GlobalFree({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:pointer} r: int);
GlobalReAlloc({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:pointer} r: int);
GlobalSize({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
HalAssignSlotResources({:pointer} {:ptr "Mem_T._UNICODE_STRING"} x0: int, {:pointer} {:ptr "Mem_T._UNICODE_STRING"} {:ref "Mem_T._UNICODE_STRING"} x1: int, {:pointer} {:ptr "Mem_T._DRIVER_OBJECT"} x2: int, {:pointer} {:ptr "Mem_T._DEVICE_OBJECT"} x3: int, {:scalar} x4: int, {:scalar} x5: int, {:scalar} x6: int, {:pointer} {:ptr "Mem_T.P_CM_RESOURCE_LIST"} {:ref "Mem_T.P_CM_RESOURCE_LIST"} x7: int) returns ({:scalar} r: int);
HalGetBusData({:scalar} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
HalGetInterruptVector({:scalar} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x4: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x5: int) returns ({:scalar} r: int);
HalSetBusDataByOffset({:scalar} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} x3: int, {:scalar} x4: int, {:scalar} x5: int) returns ({:scalar} r: int);
HalTranslateBusAddress({:scalar} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x3: int, {:pointer} {:ptr "Mem_T._LARGE_INTEGER"} {:ref "Mem_T._LARGE_INTEGER"} x4: int) returns ({:scalar} r: int);
HeadlessDispatch({:scalar} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x3: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x4: int) returns ({:scalar} r: int);
HeapAlloc({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:pointer} r: int);
HeapCreate({:scalar} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:pointer} r: int);
HeapDestroy({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
HeapFree({:pointer} x0: int, {:scalar} x1: int, {:pointer} x2: int) returns ({:scalar} r: int);
HeapReAlloc({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:scalar} x3: int) returns ({:pointer} r: int);
HeapSize({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int) returns ({:scalar} r: int);
HviGetHypervisorFeatures({:pointer} {:ptr "Mem_T._HV_X64_HYPERVISOR_FEATURES"} {:ref "Mem_T._HV_X64_HYPERVISOR_FEATURES"} x0: int);
HvlQueryConnection({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
IIDFromString({:pointer} {:ptr "Mem_T.INT4"} x0: int, {:pointer} {:ptr "Mem_T._GUID"} {:ref "Mem_T._GUID"} x1: int) returns ({:scalar} r: int);
InbvGetFunction() returns ({:scalar} r: int);
InitializeAcl({:pointer} {:ptr "Mem_T._ACL"} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
InitializeCriticalSection({:pointer} {:ptr "Mem_T._RTL_CRITICAL_SECTION"} {:ref "Mem_T._RTL_CRITICAL_SECTION"} x0: int);
InitializeCriticalSectionAndSpinCount({:pointer} {:ref "Mem_T._RTL_CRITICAL_SECTION"} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
InitializeSecurityDescriptor({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
InterlockedPopEntrySList({:pointer} {:ref "Mem_T._SLIST_HEADER"} x0: int) returns ({:pointer} r: int);
InterlockedPushEntrySList({:pointer} {:ref "Mem_T._SLIST_HEADER"} x0: int, {:pointer} x1: int) returns ({:pointer} r: int);
IoAcquireCancelSpinLock({:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x0: int);
IoAcquireCancelSpinLock({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int);
IoAcquireCancelSpinLock({:pointer} {:ptr "Mem_T._LARGE_INTEGER"} {:ref "Mem_T._LARGE_INTEGER"} x0: int);
IoAllocateDriverObjectExtension({:pointer} {:ptr "Mem_T._DRIVER_OBJECT"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.PVOID"} {:ref "Mem_T.PVOID"} x3: int) returns ({:scalar} r: int);
IoAllocateErrorLogEntry({:pointer} x0: int, {:scalar} x1: int) returns ({:pointer} r: int);
IoAllocateIrp({:scalar} x0: int, {:scalar} x1: int) returns ({:pointer} r: int);
IoAllocateMdl({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} x4: int) returns ({:pointer} r: int);
IoAllocateWorkItem({:pointer} x0: int) returns ({:pointer} r: int);
IoAssignResources({:pointer} {:ptr "Mem_T._UNICODE_STRING"} x0: int, {:pointer} {:ptr "Mem_T._UNICODE_STRING"} x1: int, {:pointer} {:ptr "Mem_T._DRIVER_OBJECT"} x2: int, {:pointer} {:ptr "Mem_T._DEVICE_OBJECT"} x3: int, {:pointer} {:ptr "Mem_T._IO_RESOURCE_REQUIREMENTS_LIST"} x4: int, {:pointer} {:ptr "Mem_T.P_CM_RESOURCE_LIST"} {:ref "Mem_T.P_CM_RESOURCE_LIST"} x5: int) returns ({:scalar} r: int);
IoAttachDeviceToDeviceStack({:pointer} x0: int, {:pointer} x1: int) returns ({:pointer} r: int);
IoBuildAsynchronousFsdRequest({:scalar} x0: int, {:pointer} {:ptr "Mem_T._DEVICE_OBJECT"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T._LARGE_INTEGER"} x4: int, {:pointer} {:ptr "Mem_T._IO_STATUS_BLOCK"} x5: int) returns ({:pointer} r: int);
IoBuildDeviceIoControlRequest({:scalar} x0: int, {:pointer} x1: int, {:pointer} x2: int, {:scalar} x3: int, {:pointer} x4: int, {:scalar} x5: int, {:scalar} x6: int, {:pointer} {:ref "Mem_T.VOID"} x7: int, {:pointer} {:ref "Mem_T._IO_STATUS_BLOCK"} x8: int) returns ({:pointer} r: int);
IoBuildSynchronousFsdRequest({:scalar} x0: int, {:pointer} x1: int, {:pointer} x2: int, {:scalar} x3: int, {:pointer} x4: int, {:pointer} {:ref "Mem_T.VOID"} x5: int, {:pointer} {:ref "Mem_T._IO_STATUS_BLOCK"} x6: int) returns ({:pointer} r: int);
IoCancelIrp({:pointer} x0: int) returns ({:scalar} r: int);
IoConnectInterrupt({:pointer} {:ptr "Mem_T.P_KINTERRUPT"} {:ref "Mem_T.P_KINTERRUPT"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:pointer} {:ptr "Mem_T.INT4"} x3: int, {:scalar} x4: int, {:scalar} x5: int, {:scalar} x6: int, {:scalar} x7: int, {:scalar} x8: int, {:scalar} x9: int, {:scalar} x10: int) returns ({:scalar} r: int);
IoCreateDevice({:pointer} x0: int, {:scalar} x1: int, {:pointer} {:ref "Mem_T._UNICODE_STRING"} x2: int, {:scalar} x3: int, {:scalar} x4: int, {:scalar} x5: int, {:pointer} {:ref "Mem_T.P_DEVICE_OBJECT"} x6: int) returns ({:scalar} r: int);
IoCreateSymbolicLink({:pointer} {:ref "Mem_T._UNICODE_STRING"} x0: int, {:pointer} {:ref "Mem_T._UNICODE_STRING"} x1: int) returns ({:scalar} r: int);
IoCreateUnprotectedSymbolicLink({:pointer} {:ref "Mem_T._UNICODE_STRING"} x0: int, {:pointer} {:ref "Mem_T._UNICODE_STRING"} x1: int) returns ({:scalar} r: int);
IoCsqInitialize({:pointer} {:ref "Mem_T._IO_CSQ"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:scalar} x4: int, {:scalar} x5: int, {:scalar} x6: int) returns ({:scalar} r: int);
IoCsqInsertIrp({:pointer} {:ref "Mem_T._IO_CSQ"} x0: int, {:pointer} x1: int, {:pointer} x2: int);
IoCsqRemoveNextIrp({:pointer} {:ref "Mem_T._IO_CSQ"} x0: int, {:pointer} x1: int) returns ({:pointer} r: int);
IoDeleteDevice({:pointer} x0: int);
IoDeleteSymbolicLink({:pointer} {:ref "Mem_T._UNICODE_STRING"} x0: int) returns ({:scalar} r: int);
IoDetachDevice({:pointer} x0: int);
IoDisconnectInterrupt({:pointer} {:ptr "Mem_T._KINTERRUPT"} x0: int);
IoFreeErrorLogEntry({:pointer} {:ptr "Mem_T.VOID"} x0: int);
IoFreeIrp({:pointer} x0: int);
IoFreeMdl({:pointer} x0: int);
IoFreeWorkItem({:pointer} x0: int);
IoGetActivityIdIrp({:pointer} {:ptr "Mem_T._IRP"} x0: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x1: int) returns ({:scalar} r: int);
IoGetAttachedDeviceReference({:pointer} x0: int) returns ({:pointer} r: int);
IoGetConfigurationInformation() returns ({:pointer} r: int);
IoGetDeviceProperty({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} x3: int, {:pointer} {:ref "Mem_T.INT4"} x4: int) returns ({:scalar} r: int);
IoGetDmaAdapter({:pointer} {:ptr "Mem_T._DEVICE_OBJECT"} x0: int, {:pointer} {:ptr "Mem_T._DEVICE_DESCRIPTION"} {:ref "Mem_T._DEVICE_DESCRIPTION"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x2: int) returns ({:pointer} r: int);
IoGetDriverObjectExtension({:pointer} {:ptr "Mem_T._DRIVER_OBJECT"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int) returns ({:pointer} r: int);
IoGetInitialStack() returns ({:pointer} r: int);
IoGetRelatedDeviceObject({:pointer} x0: int) returns ({:pointer} r: int);
IoGetRequestorSessionId({:pointer} x0: int, {:pointer} {:ref "Mem_T.INT4"} x1: int) returns ({:scalar} r: int);
IoGetStackLimits({:pointer} {:ref "Mem_T.INT4"} x0: int, {:pointer} {:ref "Mem_T.INT4"} x1: int);
IoInitializeIrp({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int);
IoInitializeTimer({:pointer} {:ptr "Mem_T._DEVICE_OBJECT"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int) returns ({:scalar} r: int);
IoInvalidateDeviceRelations({:pointer} {:ptr "Mem_T._DEVICE_OBJECT"} x0: int, {:scalar} x1: int);
IoInvalidateDeviceState({:pointer} x0: int);
IoOpenDeviceRegistryKey({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ref "Mem_T.PVOID"} x3: int) returns ({:scalar} r: int);
IoPerfInit({:scalar} x0: int) returns ({:scalar} r: int);
IoPerfReset({:scalar} x0: int) returns ({:scalar} r: int);
IoQueryDeviceDescription({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:pointer} {:ptr "Mem_T.VOID"} x3: int, {:pointer} {:ptr "Mem_T.VOID"} x4: int, {:pointer} {:ptr "Mem_T.VOID"} x5: int, {:scalar} x6: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x7: int) returns ({:scalar} r: int);
IoQueueWorkItem({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} x3: int);
IoRegisterDeviceInterface({:pointer} x0: int, {:pointer} x1: int, {:pointer} x2: int, {:pointer} {:ref "Mem_T._UNICODE_STRING"} x3: int) returns ({:scalar} r: int);
IoRegisterPlugPlayNotification({:scalar} x0: int, {:scalar} x1: int, {:pointer} {:ref "Mem_T.VOID"} x2: int, {:pointer} x3: int, {:scalar} x4: int, {:pointer} x5: int, {:pointer} {:ref "Mem_T.PVOID"} x6: int) returns ({:scalar} r: int);
IoReleaseCancelSpinLock({:scalar} x0: int);
IoReportDetectedDevice({:pointer} {:ptr "Mem_T._DRIVER_OBJECT"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T._CM_RESOURCE_LIST"} x4: int, {:pointer} {:ptr "Mem_T._IO_RESOURCE_REQUIREMENTS_LIST"} x5: int, {:scalar} x6: int, {:pointer} {:ptr "Mem_T.P_DEVICE_OBJECT"} {:ref "Mem_T.P_DEVICE_OBJECT"} x7: int) returns ({:scalar} r: int);
IoReuseIrp({:pointer} x0: int, {:scalar} x1: int);
IoSetDeviceInterfacePropertyData({:pointer} {:ref "Mem_T._UNICODE_STRING"} x0: int, {:pointer} {:ref "Mem_T._DEVPROPKEY"} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:scalar} x4: int, {:scalar} x5: int, {:pointer} {:ref "Mem_T.VOID"} x6: int) returns ({:scalar} r: int);
IoSetDeviceInterfaceState({:pointer} {:ref "Mem_T._UNICODE_STRING"} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
IoSetStartIoAttributes({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int);
IoSetThreadHardErrorMode({:scalar} x0: int) returns ({:scalar} r: int);
IoStartNextPacket({:pointer} x0: int, {:scalar} x1: int);
IoStartPacket({:pointer} x0: int, {:pointer} x1: int, {:pointer} x2: int, {:scalar} x3: int);
IoStartTimer({:pointer} {:ptr "Mem_T._DEVICE_OBJECT"} x0: int);
IoStopTimer({:pointer} {:ptr "Mem_T._DEVICE_OBJECT"} x0: int);
IoUnregisterPlugPlayNotification({:pointer} x0: int) returns ({:scalar} r: int);
IoWMIRegistrationControl({:pointer} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
IoWMIWriteEvent({:pointer} {:ref "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
IoWriteErrorLogEntry({:pointer} x0: int);
IofCallDriver({:pointer} x0: int, {:pointer} x1: int) returns ({:scalar} r: int);
IofCompleteRequest({:pointer} x0: int, {:scalar} x1: int);
IrpAllocateWithContext({:scalar} x0: int, {:scalar} x1: int, {:pointer} {:ref "Mem_T.PVOID"} x2: int, {:scalar} x3: int) returns ({:pointer} r: int);
IrpBuildIoctl({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} x4: int, {:scalar} x5: int, {:scalar} x6: int, {:scalar} x7: int, {:pointer} x8: int) returns ({:pointer} r: int);
IrpFreeWithContext({:pointer} x0: int, {:scalar} x1: int);
IsNotStress() returns ({:scalar} r: int);
IsValidAcl({:pointer} {:ptr "Mem_T._ACL"} x0: int) returns ({:scalar} r: int);
IsValidSecurityDescriptor({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
IsValidSid({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
IsWindowUnicode({:pointer} {:ptr "Mem_T.HWND__"} x0: int) returns ({:scalar} r: int);
KdGetMaximumTraceDataSize() returns ({:scalar} r: int);
KdPollBreakIn() returns ({:scalar} r: int);
KdSendTraceData({:pointer} {:ptr "Mem_T._KD_TRACE_DATA_DESCRIPTOR"} {:ref "Mem_T._KD_TRACE_DATA_DESCRIPTOR"} x0: int, {:scalar} x1: int);
KeAcquireGuardedMutex({:pointer} {:ptr "Mem_T._FAST_MUTEX"} x0: int);
KeAreApcsDisabled() returns ({:scalar} r: int);
KeBugCheck({:scalar} x0: int);
KeBugCheckEx({:scalar} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:scalar} x4: int);
KeCancelTimer({:pointer} x0: int) returns ({:scalar} r: int);
KeCancelTimer2({:pointer} {:ptr "Mem_T._KTIMER2"} {:ref "Mem_T._KTIMER2"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int) returns ({:scalar} r: int);
KeClearEvent({:pointer} {:ref "Mem_T.VOID"} x0: int);
KeDelayExecutionThread({:scalar} x0: int, {:scalar} x1: int, {:pointer} {:ref "Mem_T._LARGE_INTEGER"} x2: int) returns ({:scalar} r: int);
KeEnterCriticalRegion();
KeEnterCriticalRegionThread({:pointer} {:ptr "Mem_T._KTHREAD"} {:ref "Mem_T._KTHREAD"} x0: int);
KeEnterGuardedRegionThread({:pointer} {:ptr "Mem_T._KTHREAD"} {:ref "Mem_T._KTHREAD"} x0: int);
KeFlushIoBuffers({:pointer} {:ptr "Mem_T._MDL"} x0: int, {:scalar} x1: int, {:scalar} x2: int);
KeFlushQueuedDpcs();
KeGenericCallDpc({:scalar} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int);
KeGetClockOwner() returns ({:scalar} r: int);
KeGetCurrentIrql() returns ({:scalar} r: int);
KeGetCurrentStackPointer() returns ({:scalar} r: int);
KeGetCurrentThread() returns ({:pointer} r: int);
KeGetDynamicTickDisableReason() returns ({:scalar} r: int);
KeGetEffectiveIrql() returns ({:scalar} r: int);
KeGetPrcb({:scalar} x0: int) returns ({:pointer} r: int);
KeGetProcessorNumberFromIndex({:scalar} x0: int, {:pointer} {:ptr "Mem_T._PROCESSOR_NUMBER"} x1: int) returns ({:scalar} r: int);
KeInitializeApc({:pointer} {:ptr "Mem_T._KAPC"} {:ref "Mem_T._KAPC"} x0: int, {:pointer} {:ptr "Mem_T._KTHREAD"} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:scalar} x4: int, {:scalar} x5: int, {:scalar} x6: int, {:pointer} {:ptr "Mem_T.VOID"} x7: int);
KeInitializeDeviceQueue({:pointer} {:ptr "Mem_T._KDEVICE_QUEUE"} {:ref "Mem_T._KDEVICE_QUEUE"} x0: int);
KeInitializeDpc({:pointer} {:ref "Mem_T._KDPC"} x0: int, {:scalar} x1: int, {:pointer} x2: int);
KeInitializeEvent({:pointer} {:ref "Mem_T._KEVENT"} x0: int, {:scalar} x1: int, {:scalar} x2: int);
KeInitializeGuardedMutex({:pointer} {:ptr "Mem_T._FAST_MUTEX"} {:ref "Mem_T._FAST_MUTEX"} x0: int);
KeInitializeMutex({:pointer} x0: int, {:scalar} x1: int);
KeInitializeProfileCallback({:pointer} {:ptr "Mem_T._KPROFILE"} {:ref "Mem_T._KPROFILE"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:scalar} x3: int);
KeInitializeQueue({:pointer} {:ptr "Mem_T._KQUEUE"} {:ref "Mem_T._KQUEUE"} x0: int, {:scalar} x1: int);
KeInitializeSpinLock({:pointer} {:ref "Mem_T.INT4"} x0: int);
KeInitializeThreadedDpc({:pointer} {:ref "Mem_T._KDPC"} x0: int, {:scalar} x1: int, {:pointer} x2: int);
KeInitializeTimer({:pointer} {:ref "Mem_T._KTIMER"} x0: int);
KeInitializeTimer2({:pointer} {:ptr "Mem_T._KTIMER2"} {:ref "Mem_T._KTIMER2"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:scalar} x3: int);
KeInitializeTimerEx({:pointer} x0: int, {:scalar} x1: int);
KeInsertByKeyDeviceQueue({:pointer} {:ptr "Mem_T._KDEVICE_QUEUE"} {:ref "Mem_T._KDEVICE_QUEUE"} x0: int, {:pointer} {:ptr "Mem_T._KDEVICE_QUEUE_ENTRY"} {:ref "Mem_T._KDEVICE_QUEUE_ENTRY"} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
KeInsertDeviceQueue({:pointer} {:ptr "Mem_T._KDEVICE_QUEUE"} {:ref "Mem_T._KDEVICE_QUEUE"} x0: int, {:pointer} {:ptr "Mem_T._KDEVICE_QUEUE_ENTRY"} {:ref "Mem_T._KDEVICE_QUEUE_ENTRY"} x1: int) returns ({:scalar} r: int);
KeInsertQueue({:pointer} {:ptr "Mem_T._KQUEUE"} {:ref "Mem_T._KQUEUE"} x0: int, {:pointer} {:ptr "Mem_T._LIST_ENTRY"} {:ref "Mem_T._LIST_ENTRY"} x1: int) returns ({:scalar} r: int);
KeInsertQueueApc({:pointer} {:ptr "Mem_T._KAPC"} {:ref "Mem_T._KAPC"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
KeInsertQueueDpc({:pointer} {:ref "Mem_T._KDPC"} x0: int, {:pointer} x1: int, {:pointer} x2: int) returns ({:scalar} r: int);
KeIsAttachedProcess() returns ({:scalar} r: int);
KeIsExecutingDpc() returns ({:scalar} r: int);
KeIsExecutingLegacyDpc() returns ({:scalar} r: int);
KeIsNodeInitialized({:scalar} x0: int) returns ({:scalar} r: int);
KeLeaveCriticalRegion();
KeLeaveCriticalRegionThread({:pointer} {:ptr "Mem_T._KTHREAD"} {:ref "Mem_T._KTHREAD"} x0: int);
KeLeaveGuardedRegionThread({:pointer} {:ptr "Mem_T._KTHREAD"} {:ref "Mem_T._KTHREAD"} x0: int);
KeQueryActiveGroupCount() returns ({:scalar} r: int);
KeQueryActiveProcessorCountEx({:scalar} x0: int) returns ({:scalar} r: int);
KeQueryActiveProcessors() returns ({:scalar} r: int);
KeQueryBootTimeValues({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x2: int);
KeQueryCurrentStackInformation({:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x0: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x1: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x2: int) returns ({:scalar} r: int);
KeQueryCycleCounterFrequency({:pointer} {:ptr "Mem_T._KPRCB"} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
KeQueryCycleTimeThread({:pointer} {:ptr "Mem_T._KTHREAD"} {:ref "Mem_T._KTHREAD"} x0: int) returns ({:scalar} r: int);
KeQueryGroupAffinity({:scalar} x0: int) returns ({:scalar} r: int);
KeQueryHighestNodeNumber() returns ({:scalar} r: int);
KeQueryInterruptTime() returns ({:scalar} r: int);
KeQueryLowTickCount() returns ({:scalar} r: int);
KeQueryMaximumProcessorCountEx({:scalar} x0: int) returns ({:scalar} r: int);
KeQueryNodeActiveAffinity({:scalar} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.INT4"} x2: int);
KeQueryPerformanceCounter({:pointer} x0: int) returns ({:scalar} r: int);
KeQuerySystemTime({:pointer} {:ref "Mem_T._LARGE_INTEGER"} x0: int);
KeQuerySystemTimePrecise({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int);
KeQueryTickCount({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int);
KeQueryTimeIncrement() returns ({:scalar} r: int);
KeRaiseIrqlToDpcLevel() returns ({:scalar} r: int);
KeReadStateEvent({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
KeReadStateThread({:pointer} {:ptr "Mem_T._KTHREAD"} x0: int) returns ({:scalar} r: int);
KeRegisterBugCheckReasonCallback({:pointer} {:ptr "Mem_T._KBUGCHECK_REASON_CALLBACK_RECORD"} {:ref "Mem_T._KBUGCHECK_REASON_CALLBACK_RECORD"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x3: int) returns ({:scalar} r: int);
KeReleaseGuardedMutex({:pointer} {:ptr "Mem_T._FAST_MUTEX"} x0: int);
KeReleaseMutex({:pointer} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
KeRemoveByKeyDeviceQueueIfBusy({:pointer} {:ptr "Mem_T._KDEVICE_QUEUE"} {:ref "Mem_T._KDEVICE_QUEUE"} x0: int, {:scalar} x1: int) returns ({:pointer} r: int);
KeRemoveDeviceQueue({:pointer} {:ref "Mem_T._KDEVICE_QUEUE"} x0: int) returns ({:pointer} r: int);
KeRemoveEntryDeviceQueue({:pointer} {:ref "Mem_T._KDEVICE_QUEUE"} x0: int, {:pointer} {:ref "Mem_T._KDEVICE_QUEUE_ENTRY"} x1: int) returns ({:scalar} r: int);
KeRemoveQueue({:pointer} {:ptr "Mem_T._KQUEUE"} {:ref "Mem_T._KQUEUE"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x2: int) returns ({:pointer} r: int);
KeRemoveQueueApc({:pointer} {:ptr "Mem_T._KAPC"} {:ref "Mem_T._KAPC"} x0: int) returns ({:scalar} r: int);
KeRemoveQueueDpc({:pointer} {:ptr "Mem_T._KDPC"} {:ref "Mem_T._KDPC"} x0: int) returns ({:scalar} r: int);
KeResetEvent({:pointer} {:ref "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
KeRestoreFloatingPointState({:pointer} {:ref "Mem_T._KFLOATING_SAVE"} x0: int) returns ({:scalar} r: int);
KeRundownQueue({:pointer} {:ptr "Mem_T._KQUEUE"} {:ref "Mem_T._KQUEUE"} x0: int) returns ({:pointer} r: int);
KeSaveFloatingPointState({:pointer} {:ref "Mem_T._KFLOATING_SAVE"} x0: int) returns ({:scalar} r: int);
KeSetActualBasePriorityThread({:pointer} {:ptr "Mem_T._KTHREAD"} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
KeSetCoalescableTimer({:pointer} {:ptr "Mem_T._KTIMER"} {:ref "Mem_T._KTIMER"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T._KDPC"} x4: int) returns ({:scalar} r: int);
KeSetEvent({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
KeSetImportanceDpc({:pointer} {:ptr "Mem_T._KDPC"} {:ref "Mem_T._KDPC"} x0: int, {:scalar} x1: int);
KeSetIntervalProfile({:scalar} x0: int, {:scalar} x1: int);
KeSetTargetProcessorIndexDpc({:pointer} {:ptr "Mem_T._KDPC"} x0: int, {:scalar} x1: int);
KeSetTimer({:pointer} {:ref "Mem_T._KTIMER"} x0: int, {:scalar} x1: int, {:pointer} {:ref "Mem_T._KDPC"} x2: int) returns ({:scalar} r: int);
KeSetTimer2({:pointer} {:ptr "Mem_T._KTIMER2"} {:ref "Mem_T._KTIMER2"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T._EXT_SET_PARAMETERS_V0"} {:ref "Mem_T._EXT_SET_PARAMETERS_V0"} x3: int) returns ({:scalar} r: int);
KeSetTimerEx({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} x3: int) returns ({:scalar} r: int);
KeSignalCallDpcDone({:pointer} {:ptr "Mem_T.VOID"} x0: int);
KeStackAttachProcess({:pointer} {:ptr "Mem_T._KPROCESS"} {:ref "Mem_T._KPROCESS"} x0: int, {:pointer} {:ptr "Mem_T._KAPC_STATE"} {:ref "Mem_T._KAPC_STATE"} x1: int);
KeStallExecutionProcessor({:scalar} x0: int);
KeStartProfile({:pointer} {:ptr "Mem_T._KPROFILE"} {:ref "Mem_T._KPROFILE"} x0: int) returns ({:scalar} r: int);
KeStopProfile({:pointer} {:ptr "Mem_T._KPROFILE"} {:ref "Mem_T._KPROFILE"} x0: int) returns ({:scalar} r: int);
KeTestSpinLock({:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x0: int) returns ({:scalar} r: int);
KeTryToAcquireSpinLockAtDpcLevel({:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x0: int) returns ({:scalar} r: int);
KeTryToInsertQueueApc({:pointer} {:ptr "Mem_T._KAPC"} {:ref "Mem_T._KAPC"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int) returns ({:scalar} r: int);
KeUnstackDetachProcess({:pointer} {:ptr "Mem_T._KAPC_STATE"} {:ref "Mem_T._KAPC_STATE"} x0: int);
KeWaitForMultipleObjects({:scalar} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:scalar} x4: int, {:scalar} x5: int, {:pointer} {:ptr "Mem_T.VOID"} x6: int, {:pointer} {:ptr "Mem_T._KWAIT_BLOCK"} x7: int) returns ({:scalar} r: int);
KeWaitForSingleObject({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T._LARGE_INTEGER"} {:ref "Mem_T._LARGE_INTEGER"} x4: int) returns ({:scalar} r: int);
KeWaitForSingleObject({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x4: int) returns ({:scalar} r: int);
KeWaitForSingleObject({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T._CC_FILE_SIZES"} {:ref "Mem_T._CC_FILE_SIZES"} x4: int) returns ({:scalar} r: int);
KeWaitForSingleObject({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x4: int) returns ({:scalar} r: int);
KeYieldProcessorEx({:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x0: int);
KefAcquireSpinLockAtDpcLevel({:pointer} {:ref "Mem_T.INT4"} x0: int);
KefReleaseSpinLockFromDpcLevel({:pointer} {:ref "Mem_T.INT4"} x0: int);
KfAcquireSpinLock({:pointer} {:ref "Mem_T.INT4"} x0: int) returns ({:scalar} r: int);
KfLowerIrql({:scalar} x0: int);
KfRaiseIrql({:scalar} x0: int) returns ({:scalar} r: int);
KfReleaseSpinLock({:pointer} {:ref "Mem_T.INT4"} x0: int, {:scalar} x1: int);
KsAcquireControl({:pointer} x0: int);
KsAddEvent({:pointer} x0: int, {:pointer} x1: int);
KsGenerateEvents({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} x4: int, {:scalar} x5: int, {:pointer} x6: int);
KsGetDevice({:pointer} x0: int) returns ({:pointer} r: int);
KsGetFirstChild({:pointer} x0: int) returns ({:pointer} r: int);
KsGetNextSibling({:pointer} x0: int) returns ({:pointer} r: int);
KsGetObjectFromFileObject({:pointer} x0: int) returns ({:pointer} r: int);
KsGetOuterUnknown({:pointer} x0: int) returns ({:pointer} r: int);
KsGetParent({:pointer} x0: int) returns ({:pointer} r: int);
KsRegisterAggregatedClientUnknown({:pointer} x0: int, {:pointer} x1: int) returns ({:pointer} r: int);
KsReleaseControl({:pointer} x0: int);
LeaveCriticalSection({:pointer} {:ref "Mem_T._RTL_CRITICAL_SECTION"} x0: int);
LoadLibraryA({:pointer} x0: int) returns ({:pointer} r: int);
LoadLibraryExW({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int) returns ({:pointer} r: int);
LoadRegTypeLib({:pointer} {:ptr "Mem_T._GUID"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T.PITypeLib"} {:ref "Mem_T.PITypeLib"} x4: int) returns ({:scalar} r: int);
LoadResource({:pointer} {:ptr "Mem_T.HINSTANCE__"} x0: int, {:pointer} {:ptr "Mem_T.HRSRC__"} x1: int) returns ({:pointer} r: int);
LoadStringW({:pointer} {:ptr "Mem_T.HINSTANCE__"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
LoadTypeLib({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.PITypeLib"} {:ref "Mem_T.PITypeLib"} x1: int) returns ({:scalar} r: int);
LocalAlloc({:scalar} x0: int, {:scalar} x1: int) returns ({:pointer} r: int);
LocalFileTimeToFileTime({:pointer} {:ptr "Mem_T._FILETIME"} x0: int, {:pointer} {:ptr "Mem_T._FILETIME"} {:ref "Mem_T._FILETIME"} x1: int) returns ({:scalar} r: int);
LocalFree({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:pointer} r: int);
LocalReAlloc({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:pointer} r: int);
LocalSize({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
LockResource({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:pointer} r: int);
LookupAccountNameW({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x2: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x3: int, {:pointer} {:ptr "Mem_T.VOID"} x4: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x5: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x6: int) returns ({:scalar} r: int);
LookupPrivilegeValueW({:pointer} {:ptr "Mem_T.INT4"} x0: int, {:pointer} {:ptr "Mem_T.INT4"} x1: int, {:pointer} {:ptr "Mem_T._LUID"} x2: int) returns ({:scalar} r: int);
MapViewOfFileNuma2({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int, {:pointer} x3: int, {:scalar} x4: int, {:scalar} x5: int, {:scalar} x6: int, {:scalar} x7: int) returns ({:pointer} r: int);
MmAddVerifierThunks({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
MmAllocateContiguousMemory({:scalar} x0: int, {:scalar} x1: int) returns ({:pointer} r: int);
MmAllocateContiguousMemorySpecifyCache({:scalar} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:scalar} x4: int) returns ({:pointer} r: int);
MmAllocateContiguousNodeMemory({:scalar} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:scalar} x4: int, {:scalar} x5: int) returns ({:pointer} r: int);
MmAllocateMappingAddress({:scalar} x0: int, {:scalar} x1: int) returns ({:pointer} r: int);
MmBuildMdlForNonPagedPool({:pointer} {:ref "Mem_T._MDL"} x0: int);
MmFreeContiguousMemory({:pointer} {:ptr "Mem_T.VOID"} x0: int);
MmFreeContiguousMemorySpecifyCache({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int);
MmFreeMappingAddress({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int);
MmGetPhysicalAddress({:pointer} x0: int) returns ({:scalar} r: int);
MmGetSystemRoutineAddress({:pointer} {:ref "Mem_T._UNICODE_STRING"} x0: int) returns ({:pointer} r: int);
MmIsVerifierEnabled({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
MmLockPagableDataSection({:pointer} x0: int) returns ({:pointer} r: int);
MmLockPagableSectionByHandle({:pointer} {:ptr "Mem_T.VOID"} x0: int);
MmMapIoSpace({:scalar} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:pointer} r: int);
MmMapIoSpaceEx({:scalar} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:pointer} r: int);
MmMapLockedPagesSpecifyCache({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} x3: int, {:scalar} x4: int, {:scalar} x5: int) returns ({:pointer} r: int);
MmMapLockedPagesWithReservedMapping({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T._MDL"} x2: int, {:scalar} x3: int) returns ({:pointer} r: int);
MmProbeAndLockPages({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int);
MmProtectMdlSystemAddress({:pointer} {:ptr "Mem_T._MDL"} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
MmSizeOfMdl({:pointer} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
MmUnlockPagableImageSection({:pointer} x0: int);
MmUnlockPages({:pointer} x0: int);
MmUnmapIoSpace({:pointer} x0: int, {:scalar} x1: int);
MmUnmapLockedPages({:pointer} x0: int, {:pointer} x1: int);
MmUnmapReservedMapping({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T._MDL"} x2: int);
MoveFileW({:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x0: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x1: int) returns ({:scalar} r: int);
MsgWaitForMultipleObjects({:scalar} x0: int, {:pointer} {:ptr "Mem_T.PVOID"} {:ref "Mem_T.PVOID"} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
MultiByteToWideChar({:scalar} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x4: int, {:scalar} x5: int) returns ({:scalar} r: int);
MxAllocatePoolWithTag({:scalar} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:pointer} r: int);
MxDelayExecutionThread({:scalar} x0: int, {:scalar} x1: int, {:pointer} {:ref "Mem_T._LARGE_INTEGER"} x2: int) returns ({:scalar} r: int);
MxFreePoolWithTag({:pointer} x0: int, {:scalar} x1: int);
NdisAllocateIoWorkItem({:pointer} x0: int) returns ({:pointer} r: int);
NdisAllocateMdl({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int) returns ({:pointer} r: int);
NdisAllocateMemoryWithTagPriority({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:pointer} r: int);
NdisAllocateNetBufferAndNetBufferList({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} x3: int, {:scalar} x4: int, {:scalar} x5: int) returns ({:pointer} r: int);
NdisAllocateNetBufferList({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:pointer} r: int);
NdisAllocateNetBufferListPool({:pointer} x0: int, {:pointer} x1: int) returns ({:pointer} r: int);
NdisAllocateTimerObject({:pointer} x0: int, {:pointer} x1: int, {:pointer} {:ref "Mem_T._SINGLE_LIST_ENTRY"} x2: int) returns ({:scalar} r: int);
NdisCancelTimerObject({:pointer} x0: int) returns ({:scalar} r: int);
NdisCloseConfiguration({:pointer} x0: int);
NdisFreeIoWorkItem({:pointer} x0: int);
NdisFreeMdl({:pointer} {:ptr "Mem_T._MDL"} x0: int);
NdisFreeMemory({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int);
NdisFreeNetBufferList({:pointer} x0: int);
NdisFreeNetBufferListPool({:pointer} x0: int);
NdisFreeTimerObject({:pointer} x0: int);
NdisGetProcessorInformation({:pointer} {:ptr "Mem_T._NDIS_SYSTEM_PROCESSOR_INFO"} {:ref "Mem_T._NDIS_SYSTEM_PROCESSOR_INFO"} x0: int) returns ({:scalar} r: int);
NdisGetProcessorInformationEx({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T._NDIS_SYSTEM_PROCESSOR_INFO_EX"} x1: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x2: int) returns ({:scalar} r: int);
NdisGetVersion() returns ({:scalar} r: int);
NdisInitializeEvent({:pointer} {:ref "Mem_T._NDIS_EVENT"} x0: int);
NdisMAllocateNetBufferSGList({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T._NET_BUFFER"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T.VOID"} x4: int, {:scalar} x5: int) returns ({:scalar} r: int);
NdisMAllocateSharedMemory({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.PVOID"} {:ref "Mem_T.PVOID"} x3: int, {:pointer} {:ptr "Mem_T._LARGE_INTEGER"} {:ref "Mem_T._LARGE_INTEGER"} x4: int);
NdisMDeregisterInterruptEx({:pointer} {:ptr "Mem_T.VOID"} x0: int);
NdisMDeregisterMiniportDriver({:pointer} x0: int);
NdisMDeregisterScatterGatherDma({:pointer} {:ptr "Mem_T.VOID"} x0: int);
NdisMEnableVirtualization({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
NdisMFreeNetBufferSGList({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T._SCATTER_GATHER_LIST"} x1: int, {:pointer} {:ptr "Mem_T._NET_BUFFER"} x2: int);
NdisMFreeSharedMemory({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} x3: int, {:scalar} x4: int);
NdisMGetDeviceProperty({:pointer} x0: int, {:pointer} {:ref "Mem_T.P_DEVICE_OBJECT"} x1: int, {:pointer} {:ref "Mem_T.P_DEVICE_OBJECT"} x2: int, {:pointer} {:ref "Mem_T.P_DEVICE_OBJECT"} x3: int, {:pointer} {:ref "Mem_T.P_CM_RESOURCE_LIST"} x4: int, {:pointer} {:ref "Mem_T.P_CM_RESOURCE_LIST"} x5: int);
NdisMGetVirtualFunctionBusData({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:scalar} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
NdisMGetVirtualFunctionLocation({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x2: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x3: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x4: int);
NdisMIndicateReceiveNetBufferLists({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:scalar} x4: int);
NdisMIndicateStatusEx({:pointer} x0: int, {:pointer} {:ref "Mem_T._NDIS_STATUS_INDICATION"} x1: int);
NdisMInvalidateConfigBlock({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int);
NdisMMapIoSpace({:pointer} {:ptr "Mem_T.PVOID"} {:ref "Mem_T.PVOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
NdisMPauseComplete({:pointer} x0: int);
NdisMQueryProbedBars({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.INT4"} x1: int) returns ({:scalar} r: int);
NdisMRegisterInterruptEx({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T._NDIS_MINIPORT_INTERRUPT_CHARACTERISTICS"} {:ref "Mem_T._NDIS_MINIPORT_INTERRUPT_CHARACTERISTICS"} x2: int, {:pointer} {:ptr "Mem_T.PVOID"} {:ref "Mem_T.PVOID"} x3: int) returns ({:scalar} r: int);
NdisMRegisterMiniportDriver({:pointer} x0: int, {:pointer} x1: int, {:pointer} x2: int, {:pointer} {:ref "Mem_T._NDIS_MINIPORT_DRIVER_CHARACTERISTICS"} x3: int, {:pointer} {:ref "Mem_T._SINGLE_LIST_ENTRY"} x4: int) returns ({:scalar} r: int);
NdisMRegisterScatterGatherDma({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T._NDIS_SG_DMA_DESCRIPTION"} {:ref "Mem_T._NDIS_SG_DMA_DESCRIPTION"} x1: int, {:pointer} {:ptr "Mem_T.PVOID"} {:ref "Mem_T.PVOID"} x2: int) returns ({:scalar} r: int);
NdisMResetComplete({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int);
NdisMResetMiniport({:pointer} x0: int);
NdisMRestartComplete({:pointer} x0: int, {:scalar} x1: int);
NdisMSendNetBufferListsComplete({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int);
NdisMSetMiniportAttributes({:pointer} x0: int, {:pointer} {:ref "Mem_T._NDIS_MINIPORT_ADAPTER_ATTRIBUTES"} x1: int) returns ({:scalar} r: int);
NdisMSetVirtualFunctionBusData({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:scalar} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
NdisMSynchronizeWithInterruptEx({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} x3: int) returns ({:scalar} r: int);
NdisOpenConfigurationEx({:pointer} x0: int, {:pointer} {:ref "Mem_T._SINGLE_LIST_ENTRY"} x1: int) returns ({:scalar} r: int);
NdisOpenConfigurationKeyByName({:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T._UNICODE_STRING"} {:ref "Mem_T._UNICODE_STRING"} x2: int, {:pointer} {:ptr "Mem_T.PVOID"} {:ref "Mem_T.PVOID"} x3: int);
NdisQueueIoWorkItem({:pointer} x0: int, {:scalar} x1: int, {:pointer} x2: int);
NdisReadConfiguration({:pointer} {:ref "Mem_T.VOID"} x0: int, {:pointer} {:ref "Mem_T.P_NDIS_CONFIGURATION_PARAMETER"} x1: int, {:pointer} x2: int, {:pointer} x3: int, {:scalar} x4: int);
NdisReadNetworkAddress({:pointer} {:ref "Mem_T.VOID"} x0: int, {:pointer} {:ref "Mem_T._SINGLE_LIST_ENTRY"} x1: int, {:pointer} x2: int, {:pointer} x3: int);
NdisResetEvent({:pointer} {:ref "Mem_T._NDIS_EVENT"} x0: int);
NdisSetCoalescableTimerObject({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
NdisSetEvent({:pointer} {:ref "Mem_T._NDIS_EVENT"} x0: int);
NdisSetOptionalHandlers({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T._NDIS_DRIVER_OPTIONAL_HANDLERS"} {:ref "Mem_T._NDIS_DRIVER_OPTIONAL_HANDLERS"} x1: int) returns ({:scalar} r: int);
NdisSetTimerObject({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} x3: int) returns ({:scalar} r: int);
NdisWaitEvent({:pointer} {:ref "Mem_T._NDIS_EVENT"} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
NdisWriteConfiguration({:pointer} {:ref "Mem_T.VOID"} x0: int, {:pointer} x1: int, {:pointer} x2: int, {:pointer} x3: int);
NdisWriteErrorLogEntry({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int);
ObReferenceObjectByHandle({:pointer} x0: int, {:scalar} x1: int, {:pointer} x2: int, {:scalar} x3: int, {:pointer} {:ref "Mem_T.PVOID"} x4: int, {:pointer} x5: int) returns ({:scalar} r: int);
ObReferenceObjectByPointer({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T._OBJECT_TYPE"} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
ObfDereferenceObject({:pointer} x0: int) returns ({:scalar} r: int);
ObfReferenceObject({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
OpenProcessToken({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.PVOID"} {:ref "Mem_T.PVOID"} x2: int) returns ({:scalar} r: int);
OpenThreadToken({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.PVOID"} {:ref "Mem_T.PVOID"} x3: int) returns ({:scalar} r: int);
OutputDebugStringA({:pointer} {:ref "Mem_T.INT4"} x0: int);
PathAppendW({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int) returns ({:scalar} r: int);
PcAddAdapterDevice({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
PcDispatchIrp({:pointer} x0: int, {:pointer} x1: int) returns ({:scalar} r: int);
PcGetTimeInterval({:scalar} x0: int) returns ({:scalar} r: int);
PcInitializeAdapterDriver({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
PcNewMiniport({:pointer} {:ref "Mem_T.PIMiniport"} x0: int, {:pointer} x1: int) returns ({:scalar} r: int);
PcNewPort({:pointer} {:ref "Mem_T.PIPort"} x0: int, {:pointer} {:ref "Mem_T._GUID"} x1: int) returns ({:scalar} r: int);
PcNewRegistryKey({:pointer} {:ref "Mem_T.PIRegistryKey"} x0: int, {:pointer} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} x4: int, {:pointer} x5: int, {:pointer} x6: int, {:scalar} x7: int, {:pointer} x8: int) returns ({:scalar} r: int);
PcRegisterPhysicalConnection({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int, {:pointer} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
PeekMessageW({:pointer} {:ptr "Mem_T.tagMSG"} {:ref "Mem_T.tagMSG"} x0: int, {:pointer} {:ptr "Mem_T.HWND__"} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
PoCallDriver({:pointer} x0: int, {:pointer} x1: int) returns ({:scalar} r: int);
PoFxCompleteIdleCondition({:pointer} x0: int, {:scalar} x1: int);
PoFxCompleteIdleState({:pointer} x0: int, {:scalar} x1: int);
PoFxSetComponentLatency({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int);
PoFxSetComponentResidency({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int);
PoRegisterDeviceForIdleDetection({:pointer} {:ptr "Mem_T._DEVICE_OBJECT"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:pointer} r: int);
PoRegisterPowerSettingCallback({:pointer} {:ptr "Mem_T._DEVICE_OBJECT"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} x3: int, {:pointer} {:ptr "Mem_T.PVOID"} {:ref "Mem_T.PVOID"} x4: int) returns ({:scalar} r: int);
PoRequestPowerIrp({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} x4: int, {:pointer} {:ref "Mem_T.PVOID"} x5: int) returns ({:scalar} r: int);
PoSetPowerState({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
PoSetSystemState({:scalar} x0: int);
PoStartNextPowerIrp({:pointer} x0: int);
PoUnregisterPowerSettingCallback({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
PortAllowIrpFromPdoToFdo({:pointer} {:ptr "Mem_T._DEVICE_OBJECT"} x0: int, {:pointer} {:ptr "Mem_T._IRP"} x1: int) returns ({:scalar} r: int);
PortGetDiskTimeoutValue({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int);
PortPassThroughGetAddress({:pointer} {:ptr "Mem_T._IRP"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x2: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x3: int) returns ({:scalar} r: int);
PortPassThroughSendSync({:pointer} {:ptr "Mem_T._DEVICE_OBJECT"} x0: int, {:pointer} {:ptr "Mem_T._IRP"} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:scalar} x4: int, {:scalar} x5: int) returns ({:scalar} r: int);
PortPassThroughSetAddress({:pointer} {:ptr "Mem_T._IRP"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
PortQueryInterfaceFdoInfo({:pointer} {:ptr "Mem_T._DEVICE_OBJECT"} x0: int, {:pointer} {:ptr "Mem_T._IRP"} x1: int, {:pointer} {:ptr "Mem_T._DEVICE_OBJECT"} x2: int) returns ({:scalar} r: int);
PortQueryInterfaceFdoQdr({:pointer} {:ptr "Mem_T._DEVICE_OBJECT"} x0: int, {:pointer} {:ptr "Mem_T._IRP"} x1: int, {:pointer} {:ptr "Mem_T._DEVICE_RELATIONS"} x2: int) returns ({:scalar} r: int);
PortQueryInterfacePdoInfo({:pointer} {:ptr "Mem_T._DEVICE_OBJECT"} x0: int, {:pointer} {:ptr "Mem_T._IRP"} x1: int, {:pointer} {:ptr "Mem_T._DEVICE_OBJECT"} x2: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x3: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x4: int, {:scalar} x5: int, {:scalar} x6: int) returns ({:scalar} r: int);
PortTraceCleanupTracing({:pointer} {:ptr "Mem_T._STOR_CLEANUP_TRACING_ARGS"} x0: int);
PortTraceErrorAllocPacket({:pointer} {:ptr "Mem_T._STOR_ALLOC_EL_RECORD_ARGS"} x0: int);
PortTraceErrorFreePacket({:pointer} {:ptr "Mem_T._STOR_FREE_EL_RECORD_ARGS"} x0: int);
PortTraceErrorWritePacket({:pointer} {:ptr "Mem_T._STOR_WRITE_EL_RECORD_ARGS"} x0: int);
PortTraceInitGlobalLogger({:pointer} {:ptr "Mem_T._STOR_INITGLOBALLOGGER_ARGS"} x0: int);
PortTraceInitTracing({:pointer} {:ptr "Mem_T._STOR_INIT_TRACING_ARGS"} x0: int);
PortTraceInitUnicodeString({:pointer} {:ptr "Mem_T._STOR_INIT_UNICODE_STRING_ARGS"} x0: int);
PortTraceMessage({:pointer} {:ptr "Mem_T._STOR_WMI_TRACE_MESSAGE_ARGS"} x0: int);
PortTraceWMIRegistrationControl({:pointer} {:ptr "Mem_T._STOR_WMI_REGCONTROL_ARGS"} x0: int);
PortTraceWmiQueryTraceInformation({:pointer} {:ptr "Mem_T._STOR_WMI_QUERYTRACEINFO_ARGS"} x0: int);
PostMessageW({:pointer} {:ptr "Mem_T.HWND__"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
PostQuitMessage({:scalar} x0: int);
PostThreadMessageW({:scalar} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
ProbeForRead({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int);
ProbeForWrite({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int);
PropVariantClear({:pointer} {:ptr "Mem_T.tagPROPVARIANT"} {:ref "Mem_T.tagPROPVARIANT"} x0: int) returns ({:scalar} r: int);
PropVariantCopy({:pointer} {:ptr "Mem_T.tagPROPVARIANT"} {:ref "Mem_T.tagPROPVARIANT"} x0: int, {:pointer} {:ptr "Mem_T.tagPROPVARIANT"} x1: int) returns ({:scalar} r: int);
PsGetVersion({:pointer} {:ref "Mem_T.INT4"} x0: int, {:pointer} {:ref "Mem_T.INT4"} x1: int, {:pointer} {:ref "Mem_T.INT4"} x2: int, {:pointer} x3: int) returns ({:scalar} r: int);
READ_PORT_UCHAR({:pointer} x0: int) returns ({:scalar} r: int);
READ_PORT_ULONG({:pointer} x0: int) returns ({:scalar} r: int);
READ_PORT_USHORT({:pointer} x0: int) returns ({:scalar} r: int);
READ_REGISTER_UCHAR({:pointer} x0: int) returns ({:scalar} r: int);
READ_REGISTER_ULONG({:pointer} {:ptr "Mem_T.INT4"} x0: int) returns ({:scalar} r: int);
READ_REGISTER_USHORT({:pointer} x0: int) returns ({:scalar} r: int);
RaiseException({:scalar} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ref "Mem_T.INT4"} x3: int);
ReadFile({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x3: int, {:pointer} {:ptr "Mem_T._OVERLAPPED"} x4: int) returns ({:scalar} r: int);
RegCloseKey({:pointer} x0: int) returns ({:scalar} r: int);
RegCreateKeyExW({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int, {:pointer} x3: int, {:scalar} x4: int, {:scalar} x5: int, {:pointer} x6: int, {:pointer} {:ref "Mem_T.PHKEY__"} x7: int, {:pointer} x8: int) returns ({:scalar} r: int);
RegDeleteTreeW({:pointer} {:ptr "Mem_T.HKEY__"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int) returns ({:scalar} r: int);
RegDeleteValueW({:pointer} {:ptr "Mem_T.HKEY__"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int) returns ({:scalar} r: int);
RegEnumKeyExW({:pointer} {:ptr "Mem_T.HKEY__"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x2: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x3: int, {:pointer} {:ptr "Mem_T.VOID"} x4: int, {:pointer} {:ptr "Mem_T.VOID"} x5: int, {:pointer} {:ptr "Mem_T.VOID"} x6: int, {:pointer} {:ptr "Mem_T._FILETIME"} {:ref "Mem_T._FILETIME"} x7: int) returns ({:scalar} r: int);
RegEnumValueW({:pointer} {:ptr "Mem_T.HKEY__"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x2: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x3: int, {:pointer} {:ptr "Mem_T.VOID"} x4: int, {:pointer} {:ptr "Mem_T.VOID"} x5: int, {:pointer} {:ptr "Mem_T.VOID"} x6: int, {:pointer} {:ptr "Mem_T.VOID"} x7: int) returns ({:scalar} r: int);
RegFlushKey({:pointer} {:ptr "Mem_T.HKEY__"} x0: int) returns ({:scalar} r: int);
RegGetKeySecurity({:pointer} {:ptr "Mem_T.HKEY__"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:pointer} {:ptr "Mem_T.VOID"} x3: int) returns ({:scalar} r: int);
RegGetValueW({:pointer} {:ptr "Mem_T.HKEY__"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T.VOID"} x4: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x5: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x6: int) returns ({:scalar} r: int);
RegNotifyChangeKeyValue({:pointer} {:ptr "Mem_T.HKEY__"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
RegOpenKeyExW({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} {:ref "Mem_T.PHKEY__"} x4: int) returns ({:scalar} r: int);
RegQueryInfoKeyW({:pointer} {:ptr "Mem_T.HKEY__"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:pointer} {:ptr "Mem_T.VOID"} x3: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x4: int, {:pointer} {:ptr "Mem_T.VOID"} x5: int, {:pointer} {:ptr "Mem_T.VOID"} x6: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x7: int, {:pointer} {:ptr "Mem_T.VOID"} x8: int, {:pointer} {:ptr "Mem_T.VOID"} x9: int, {:pointer} {:ptr "Mem_T.VOID"} x10: int, {:pointer} {:ptr "Mem_T._FILETIME"} x11: int) returns ({:scalar} r: int);
RegQueryValueExW({:pointer} x0: int, {:pointer} x1: int, {:pointer} x2: int, {:pointer} {:ref "Mem_T.INT4"} x3: int, {:pointer} x4: int, {:pointer} {:ref "Mem_T.INT4"} x5: int) returns ({:scalar} r: int);
RegSetKeySecurity({:pointer} {:ptr "Mem_T.HKEY__"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int) returns ({:scalar} r: int);
RegSetValueExW({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} x4: int, {:scalar} x5: int) returns ({:scalar} r: int);
RegisterClassW({:pointer} {:ptr "Mem_T.tagWNDCLASSW"} {:ref "Mem_T.tagWNDCLASSW"} x0: int) returns ({:scalar} r: int);
RegisterHotKey({:pointer} {:ptr "Mem_T.HWND__"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
RegisterTraceGuidsW({:scalar} x0: int, {:pointer} x1: int, {:pointer} x2: int, {:scalar} x3: int, {:pointer} {:ref "Mem_T._TRACE_GUID_REGISTRATION"} x4: int, {:pointer} x5: int, {:pointer} x6: int, {:pointer} {:ref "Mem_T.INT4"} x7: int) returns ({:scalar} r: int);
RegisterWaitForSingleObject({:pointer} {:ref "Mem_T.PVOID"} x0: int, {:pointer} x1: int, {:scalar} x2: int, {:pointer} x3: int, {:scalar} x4: int, {:scalar} x5: int) returns ({:scalar} r: int);
ReleaseConnection({:pointer} x0: int);
ReleaseMutex({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
ResetEvent({:pointer} x0: int) returns ({:scalar} r: int);
SetThreadToken({:pointer} {:ptr "Mem_T.PVOID"} {:ref "Mem_T.PVOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int) returns ({:scalar} r: int);
RtlAnsiStringToUnicodeString({:pointer} {:ref "Mem_T._UNICODE_STRING"} x0: int, {:pointer} {:ref "Mem_T._STRING"} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
RtlAppendUnicodeStringToString({:pointer} {:ref "Mem_T._UNICODE_STRING"} x0: int, {:pointer} {:ref "Mem_T._UNICODE_STRING"} x1: int) returns ({:scalar} r: int);
RtlAppendUnicodeToString({:pointer} {:ref "Mem_T._UNICODE_STRING"} x0: int, {:pointer} x1: int) returns ({:scalar} r: int);
RtlAreBitsSet({:pointer} {:ptr "Mem_T._RTL_BITMAP"} {:ref "Mem_T._RTL_BITMAP"} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
RtlAvlInsertNodeEx({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int, {:pointer} x3: int);
RtlClearAllBits({:pointer} {:ptr "Mem_T._RTL_BITMAP"} {:ref "Mem_T._RTL_BITMAP"} x0: int);
RtlClearBits({:pointer} {:ptr "Mem_T._RTL_BITMAP"} {:ref "Mem_T._RTL_BITMAP"} x0: int, {:scalar} x1: int, {:scalar} x2: int);
RtlCompareMemory({:pointer} {:ref "Mem_T.VOID"} x0: int, {:pointer} {:ref "Mem_T.VOID"} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
RtlCompareUnicodeString({:pointer} {:ref "Mem_T._UNICODE_STRING"} x0: int, {:pointer} {:ref "Mem_T._UNICODE_STRING"} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
RtlCopySid({:scalar} x0: int, {:pointer} {:ref "Mem_T.VOID"} x1: int, {:pointer} x2: int) returns ({:scalar} r: int);
RtlCopyString({:pointer} {:ptr "Mem_T._STRING"} {:ref "Mem_T._STRING"} x0: int, {:pointer} {:ptr "Mem_T._STRING"} {:ref "Mem_T._STRING"} x1: int);
RtlCopyUnicodeString({:pointer} {:ref "Mem_T._UNICODE_STRING"} x0: int, {:pointer} x1: int);
RtlDeleteRegistryValue({:scalar} x0: int, {:pointer} x1: int, {:pointer} x2: int) returns ({:scalar} r: int);
RtlEqualString({:pointer} {:ptr "Mem_T._STRING"} {:ref "Mem_T._STRING"} x0: int, {:pointer} {:ptr "Mem_T._STRING"} {:ref "Mem_T._STRING"} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
RtlEqualUnicodeString({:pointer} {:ptr "Mem_T._UNICODE_STRING"} {:ref "Mem_T._UNICODE_STRING"} x0: int, {:pointer} {:ptr "Mem_T._UNICODE_STRING"} {:ref "Mem_T._UNICODE_STRING"} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
RtlFindClearBitsAndSet({:pointer} {:ptr "Mem_T._RTL_BITMAP"} {:ref "Mem_T._RTL_BITMAP"} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
RtlFreeUnicodeString({:pointer} {:ref "Mem_T._UNICODE_STRING"} x0: int);
RtlGUIDFromString({:pointer} {:ptr "Mem_T._UNICODE_STRING"} {:ref "Mem_T._UNICODE_STRING"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int) returns ({:scalar} r: int);
RtlGetVersion({:pointer} {:ref "Mem_T._OSVERSIONINFOW"} x0: int) returns ({:scalar} r: int);
RtlInitAnsiString({:pointer} {:ref "Mem_T._STRING"} x0: int, {:pointer} {:ref "Mem_T.INT4"} x1: int);
RtlInitUnicodeString({:pointer} {:ref "Mem_T._UNICODE_STRING"} x0: int, {:pointer} x1: int);
RtlInitializeBitMap({:pointer} {:ptr "Mem_T._RTL_BITMAP"} {:ref "Mem_T._RTL_BITMAP"} x0: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x1: int, {:scalar} x2: int);
RtlIntegerToUnicodeString({:scalar} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T._UNICODE_STRING"} {:ref "Mem_T._UNICODE_STRING"} x2: int) returns ({:scalar} r: int);
RtlQueryRegistryValues({:scalar} x0: int, {:pointer} x1: int, {:pointer} x2: int, {:pointer} x3: int, {:pointer} x4: int) returns ({:scalar} r: int);
RtlRbInsertNodeEx({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int, {:pointer} x3: int);
RtlSetAllBits({:pointer} {:ptr "Mem_T._RTL_BITMAP"} {:ref "Mem_T._RTL_BITMAP"} x0: int);
RtlSetBits({:pointer} {:ptr "Mem_T._RTL_BITMAP"} {:ref "Mem_T._RTL_BITMAP"} x0: int, {:scalar} x1: int, {:scalar} x2: int);
RtlStringCopyWideCharArrayWorker({:pointer} x0: int, {:scalar} x1: int, {:pointer} {:ref "Mem_T.INT4"} x2: int, {:pointer} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
RtlStringCopyWorkerA({:pointer} x0: int, {:scalar} x1: int, {:pointer} {:ref "Mem_T.INT4"} x2: int, {:pointer} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
RtlStringCopyWorkerW({:pointer} x0: int, {:scalar} x1: int, {:pointer} {:ref "Mem_T.INT4"} x2: int, {:pointer} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
RtlStringExHandleFillBehindNullA({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
RtlStringExHandleFillBehindNullW({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
RtlStringExHandleOtherFlagsA({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ref "Mem_T.PINT4"} x3: int, {:pointer} {:ref "Mem_T.INT4"} x4: int, {:scalar} x5: int) returns ({:scalar} r: int);
RtlStringExHandleOtherFlagsW({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ref "Mem_T.PINT4"} x3: int, {:pointer} {:ref "Mem_T.INT4"} x4: int, {:scalar} x5: int) returns ({:scalar} r: int);
RtlStringExValidateDestA({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
RtlStringExValidateDestAndLengthA({:pointer} x0: int, {:scalar} x1: int, {:pointer} {:ref "Mem_T.INT4"} x2: int, {:scalar} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
RtlStringExValidateDestAndLengthW({:pointer} x0: int, {:scalar} x1: int, {:pointer} {:ref "Mem_T.INT4"} x2: int, {:scalar} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
RtlStringExValidateDestW({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
RtlStringExValidateSrcA({:pointer} {:ref "Mem_T.PINT4"} x0: int, {:pointer} {:ref "Mem_T.INT4"} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
RtlStringExValidateSrcW({:pointer} {:ref "Mem_T.PINT4"} x0: int, {:pointer} {:ref "Mem_T.INT4"} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
RtlStringFromGUID({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T._UNICODE_STRING"} {:ref "Mem_T._UNICODE_STRING"} x1: int) returns ({:scalar} r: int);
RtlStringLengthWorkerA({:pointer} x0: int, {:scalar} x1: int, {:pointer} {:ref "Mem_T.INT4"} x2: int) returns ({:scalar} r: int);
RtlStringLengthWorkerW({:pointer} x0: int, {:scalar} x1: int, {:pointer} {:ref "Mem_T.INT4"} x2: int) returns ({:scalar} r: int);
RtlStringVPrintfWorkerA({:pointer} x0: int, {:scalar} x1: int, {:pointer} {:ref "Mem_T.INT4"} x2: int, {:pointer} x3: int, {:pointer} x4: int) returns ({:scalar} r: int);
RtlStringVPrintfWorkerW({:pointer} x0: int, {:scalar} x1: int, {:pointer} {:ref "Mem_T.INT4"} x2: int, {:pointer} x3: int, {:pointer} x4: int) returns ({:scalar} r: int);
RtlStringValidateDestA({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
RtlStringValidateDestAndLengthA({:pointer} x0: int, {:scalar} x1: int, {:pointer} {:ref "Mem_T.INT4"} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
RtlStringValidateDestAndLengthW({:pointer} x0: int, {:scalar} x1: int, {:pointer} {:ref "Mem_T.INT4"} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
RtlStringValidateDestW({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
RtlTimeToTimeFields({:pointer} {:ptr "Mem_T._LARGE_INTEGER"} {:ref "Mem_T._LARGE_INTEGER"} x0: int, {:pointer} {:ptr "Mem_T._TIME_FIELDS"} {:ref "Mem_T._TIME_FIELDS"} x1: int);
RtlUnicodeStringExHandleFill({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
RtlUnicodeStringExHandleOtherFlags({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ref "Mem_T.INT4"} x3: int, {:pointer} {:ref "Mem_T.PINT4"} x4: int, {:pointer} {:ref "Mem_T.INT4"} x5: int, {:scalar} x6: int) returns ({:scalar} r: int);
RtlUnicodeStringInitWorker({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
RtlUnicodeStringToAnsiString({:pointer} {:ptr "Mem_T._STRING"} {:ref "Mem_T._STRING"} x0: int, {:pointer} {:ptr "Mem_T._UNICODE_STRING"} {:ref "Mem_T._UNICODE_STRING"} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
RtlUnicodeStringToInteger({:pointer} {:ref "Mem_T._UNICODE_STRING"} x0: int, {:scalar} x1: int, {:pointer} {:ref "Mem_T.VOID"} x2: int) returns ({:scalar} r: int);
RtlUnicodeStringValidateDestWorker({:pointer} x0: int, {:pointer} {:ref "Mem_T.PINT4"} x1: int, {:pointer} {:ref "Mem_T.INT4"} x2: int, {:pointer} {:ref "Mem_T.INT4"} x3: int, {:scalar} x4: int, {:scalar} x5: int) returns ({:scalar} r: int);
RtlUnicodeStringValidateSrcWorker({:pointer} x0: int, {:pointer} {:ref "Mem_T.PINT4"} x1: int, {:pointer} {:ref "Mem_T.INT4"} x2: int, {:scalar} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
RtlUnicodeStringValidateWorker({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
RtlVerifyVersionInfo({:pointer} {:ptr "Mem_T._OSVERSIONINFOEXW"} {:ref "Mem_T._OSVERSIONINFOEXW"} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
RtlWideCharArrayCopyStringWorker({:pointer} x0: int, {:scalar} x1: int, {:pointer} {:ref "Mem_T.INT4"} x2: int, {:pointer} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
RtlWideCharArrayCopyWorker({:pointer} x0: int, {:scalar} x1: int, {:pointer} {:ref "Mem_T.INT4"} x2: int, {:pointer} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
RtlWideCharArrayVPrintfWorker({:pointer} x0: int, {:scalar} x1: int, {:pointer} {:ref "Mem_T.INT4"} x2: int, {:pointer} x3: int, {:pointer} x4: int) returns ({:scalar} r: int);
RtlWriteRegistryValue({:scalar} x0: int, {:pointer} x1: int, {:pointer} x2: int, {:scalar} x3: int, {:pointer} x4: int, {:scalar} x5: int) returns ({:scalar} r: int);
RtlxAnsiStringToUnicodeSize({:pointer} {:ref "Mem_T._STRING"} x0: int) returns ({:scalar} r: int);
SHCreateStreamOnFileW({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.PIStream"} {:ref "Mem_T.PIStream"} x2: int) returns ({:scalar} r: int);
SHFileOperationW({:pointer} {:ptr "Mem_T._SHFILEOPSTRUCTW"} {:ref "Mem_T._SHFILEOPSTRUCTW"} x0: int) returns ({:scalar} r: int);
SafeArrayCopy({:pointer} {:ptr "Mem_T.tagSAFEARRAY"} x0: int, {:pointer} {:ptr "Mem_T.PtagSAFEARRAY"} {:ref "Mem_T.PtagSAFEARRAY"} x1: int) returns ({:scalar} r: int);
SafeArrayGetVartype({:pointer} {:ptr "Mem_T.tagSAFEARRAY"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int) returns ({:scalar} r: int);
SdBusOpenInterface({:pointer} x0: int, {:pointer} {:ref "Mem_T._SDBUS_INTERFACE_STANDARD"} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
SdBusSubmitRequest({:pointer} x0: int, {:pointer} x1: int) returns ({:scalar} r: int);
SeCaptureSubjectContext({:pointer} {:ref "Mem_T._SECURITY_SUBJECT_CONTEXT"} x0: int);
SeQueryInformationToken({:pointer} x0: int, {:scalar} x1: int, {:pointer} {:ref "Mem_T.PVOID"} x2: int) returns ({:scalar} r: int);
SeReleaseSubjectContext({:pointer} {:ref "Mem_T._SECURITY_SUBJECT_CONTEXT"} x0: int);
SetEvent({:pointer} x0: int) returns ({:scalar} r: int);
SetLastError({:scalar} x0: int);
SetSecurityDescriptorDacl({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T._ACL"} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
SetSecurityDescriptorGroup({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
SetSecurityDescriptorOwner({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
SetSecurityDescriptorSacl({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T._ACL"} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
SetThreadpoolWait({:pointer} x0: int, {:pointer} x1: int, {:pointer} x2: int);
SetWaitableTimer({:pointer} x0: int, {:pointer} {:ref "Mem_T._LARGE_INTEGER"} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} x4: int, {:scalar} x5: int) returns ({:scalar} r: int);
SetupCloseInfFile({:pointer} {:ptr "Mem_T.VOID"} x0: int);
SetupDiCreateDeviceInterfaceRegKeyW({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T._SP_DEVICE_INTERFACE_DATA"} {:ref "Mem_T._SP_DEVICE_INTERFACE_DATA"} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T.VOID"} x4: int, {:pointer} {:ptr "Mem_T.INT4"} x5: int) returns ({:pointer} r: int);
SetupDiDestroyDeviceInfoList({:pointer} x0: int) returns ({:scalar} r: int);
SetupDiEnumDeviceInterfaces({:pointer} x0: int, {:pointer} x1: int, {:pointer} x2: int, {:scalar} x3: int, {:pointer} {:ref "Mem_T._SP_DEVICE_INTERFACE_DATA"} x4: int) returns ({:scalar} r: int);
SetupDiGetClassDevsW({:pointer} x0: int, {:pointer} x1: int, {:pointer} x2: int, {:scalar} x3: int) returns ({:pointer} r: int);
SetupDiGetClassInstallParamsW({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T._SP_DEVINFO_DATA"} x1: int, {:pointer} {:ptr "Mem_T._SP_CLASSINSTALL_HEADER"} {:ref "Mem_T._SP_CLASSINSTALL_HEADER"} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T.INT4"} x4: int) returns ({:scalar} r: int);
SetupDiGetDeviceInterfaceDetailW({:pointer} x0: int, {:pointer} x1: int, {:pointer} x2: int, {:scalar} x3: int, {:pointer} {:ref "Mem_T.INT4"} x4: int, {:pointer} x5: int) returns ({:scalar} r: int);
SetupDiInstallDevice({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T._SP_DEVINFO_DATA"} x1: int) returns ({:scalar} r: int);
SetupDiRemoveDeviceInterface({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T._SP_DEVICE_INTERFACE_DATA"} {:ref "Mem_T._SP_DEVICE_INTERFACE_DATA"} x1: int) returns ({:scalar} r: int);
SetupDiSetClassInstallParamsW({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T._SP_DEVINFO_DATA"} x1: int, {:pointer} {:ptr "Mem_T._SP_CLASSINSTALL_HEADER"} {:ref "Mem_T._SP_CLASSINSTALL_HEADER"} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
SetupOpenInfFileW({:pointer} {:ptr "Mem_T.INT4"} x0: int, {:pointer} {:ptr "Mem_T.INT4"} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.INT4"} x3: int) returns ({:pointer} r: int);
SizeofResource({:pointer} {:ptr "Mem_T.HINSTANCE__"} x0: int, {:pointer} {:ptr "Mem_T.HRSRC__"} x1: int) returns ({:scalar} r: int);
Sleep({:scalar} x0: int);
SleepEx({:scalar} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
StorPortBusy({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
StorPortCompleteRequest({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:scalar} x4: int);
StorPortConvertUlongToPhysicalAddress({:scalar} x0: int) returns ({:scalar} r: int);
StorPortExtendedFunction({:scalar} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int) returns ({:scalar} r: int);
StorPortFreeDeviceBase({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int);
StorPortGetBusData({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x4: int, {:scalar} x5: int) returns ({:scalar} r: int);
StorPortGetDeviceBase({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:scalar} x4: int, {:scalar} x5: int) returns ({:pointer} r: int);
StorPortGetPhysicalAddress({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T._SCSI_REQUEST_BLOCK"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x3: int) returns ({:scalar} r: int);
StorPortGetScatterGatherList({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T._SCSI_REQUEST_BLOCK"} x1: int) returns ({:pointer} r: int);
StorPortGetUncachedExtension({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T._PORT_CONFIGURATION_INFORMATION"} x1: int, {:scalar} x2: int) returns ({:pointer} r: int);
StorPortGetVirtualAddress({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int) returns ({:pointer} r: int);
StorPortInitialize({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T._HW_INITIALIZATION_DATA"} {:ref "Mem_T._HW_INITIALIZATION_DATA"} x2: int, {:pointer} {:ptr "Mem_T.VOID"} x3: int) returns ({:scalar} r: int);
StorPortLogError({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T._SCSI_REQUEST_BLOCK"} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:scalar} x4: int, {:scalar} x5: int, {:scalar} x6: int);
StorPortMoveMemory({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int, {:scalar} x2: int);
StorPortNotification({:scalar} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int);
StorPortPause({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
StorPortReadRegisterUchar({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int) returns ({:scalar} r: int);
StorPortReadRegisterUlong({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int) returns ({:scalar} r: int);
StorPortResume({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
StorPortSetDeviceQueueDepth({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
StorPortStallExecution({:scalar} x0: int);
StorPortSynchronizeAccess({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int) returns ({:scalar} r: int);
StorPortValidateRange({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:scalar} x4: int, {:scalar} x5: int) returns ({:scalar} r: int);
StorPortWriteRegisterUchar({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int, {:scalar} x2: int);
StorPortWriteRegisterUlong({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int, {:scalar} x2: int);
StrDupA({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:pointer} r: int);
StrDupW({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:pointer} r: int);
StringFromCLSID({:pointer} {:ptr "Mem_T._GUID"} x0: int, {:pointer} {:ptr "Mem_T.PINT4"} {:ref "Mem_T.PINT4"} x1: int) returns ({:scalar} r: int);
StringFromGUID2({:pointer} {:ptr "Mem_T._GUID"} {:ref "Mem_T._GUID"} x0: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
SysAllocString({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int) returns ({:pointer} r: int);
SysAllocStringByteLen({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int) returns ({:pointer} r: int);
SysAllocStringLen({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:scalar} x1: int) returns ({:pointer} r: int);
SysFreeString({:pointer} {:ptr "Mem_T.VOID"} x0: int);
SysReAllocStringLen({:pointer} {:ptr "Mem_T.PINT4"} {:ref "Mem_T.PINT4"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
SysStringByteLen({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
SysStringLen({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
SystemTimeToFileTime({:pointer} {:ptr "Mem_T._SYSTEMTIME"} {:ref "Mem_T._SYSTEMTIME"} x0: int, {:pointer} {:ptr "Mem_T._FILETIME"} {:ref "Mem_T._FILETIME"} x1: int) returns ({:scalar} r: int);
SystemTimeToTzSpecificLocalTime({:pointer} {:ptr "Mem_T._TIME_ZONE_INFORMATION"} x0: int, {:pointer} {:ptr "Mem_T._SYSTEMTIME"} {:ref "Mem_T._SYSTEMTIME"} x1: int, {:pointer} {:ptr "Mem_T._SYSTEMTIME"} {:ref "Mem_T._SYSTEMTIME"} x2: int) returns ({:scalar} r: int);
SystemTimeToVariantTime({:pointer} {:ptr "Mem_T._SYSTEMTIME"} {:ref "Mem_T._SYSTEMTIME"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int) returns ({:scalar} r: int);
TdiCopyBufferToMdlWithReservedMappingAtDpcLevel({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int, {:scalar} x3: int);
TerminateProcess({:pointer} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
TerminateThread({:pointer} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
TraceEvent({:scalar} x0: int, {:pointer} {:ref "Mem_T._EVENT_TRACE_HEADER"} x1: int) returns ({:scalar} r: int);
TraceMessage({:scalar} x0: int, {:scalar} x1: int, {:pointer} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
TraceMessageVa({:scalar} x0: int, {:scalar} x1: int, {:pointer} x2: int, {:scalar} x3: int, {:pointer} x4: int) returns ({:scalar} r: int);
TranslateMessage({:pointer} {:ptr "Mem_T.tagMSG"} {:ref "Mem_T.tagMSG"} x0: int) returns ({:scalar} r: int);
TryEnterCriticalSection({:pointer} {:ref "Mem_T._RTL_CRITICAL_SECTION"} x0: int) returns ({:scalar} r: int);
USBD_AssignUrbToIoStackLocation({:pointer} x0: int, {:pointer} x1: int, {:pointer} x2: int);
USBD_CloseHandle({:pointer} x0: int);
USBD_CreateConfigurationRequestEx({:pointer} x0: int, {:pointer} x1: int) returns ({:pointer} r: int);
USBD_CreateHandle({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} {:ref "Mem_T.PUSBD_HANDLE__"} x4: int) returns ({:scalar} r: int);
USBD_ParseConfigurationDescriptorEx({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:scalar} x4: int, {:scalar} x5: int, {:scalar} x6: int) returns ({:pointer} r: int);
USBD_SelectConfigUrbAllocateAndBuild({:pointer} x0: int, {:pointer} x1: int, {:pointer} x2: int, {:pointer} {:ref "Mem_T.P_URB"} x3: int) returns ({:scalar} r: int);
USBD_SelectInterfaceUrbAllocateAndBuild({:pointer} x0: int, {:pointer} x1: int, {:pointer} x2: int, {:pointer} {:ref "Mem_T.P_URB"} x3: int) returns ({:scalar} r: int);
USBD_UrbAllocate({:pointer} x0: int, {:pointer} {:ref "Mem_T.P_URB"} x1: int) returns ({:scalar} r: int);
USBD_UrbFree({:pointer} x0: int, {:pointer} x1: int);
UnregisterClassW({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.HINSTANCE__"} x1: int) returns ({:scalar} r: int);
UnregisterTraceGuids({:scalar} x0: int) returns ({:scalar} r: int);
UnregisterWaitEx({:pointer} x0: int, {:pointer} x1: int) returns ({:scalar} r: int);
VarBstrCat({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.PINT4"} {:ref "Mem_T.PINT4"} x2: int) returns ({:scalar} r: int);
VarBstrCmp({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
VarBstrFromDate({:scalar} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.PINT4"} {:ref "Mem_T.PINT4"} x3: int) returns ({:scalar} r: int);
VarCmp({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
VarDateFromStr({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x3: int) returns ({:scalar} r: int);
VarDateFromUdate({:pointer} {:ptr "Mem_T.UDATE"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x2: int) returns ({:scalar} r: int);
VarUI4FromStr({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x3: int) returns ({:scalar} r: int);
VarUdateFromDate({:scalar} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.UDATE"} {:ref "Mem_T.UDATE"} x2: int) returns ({:scalar} r: int);
VariantChangeType({:pointer} {:ptr "Mem_T.tagVARIANT"} {:ref "Mem_T.tagVARIANT"} x0: int, {:pointer} {:ptr "Mem_T.tagVARIANT"} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
VariantClear({:pointer} {:ptr "Mem_T.tagVARIANT"} x0: int) returns ({:scalar} r: int);
VariantCopy({:pointer} {:ptr "Mem_T.tagVARIANT"} x0: int, {:pointer} {:ptr "Mem_T.tagVARIANT"} x1: int) returns ({:scalar} r: int);
VariantInit({:pointer} {:ptr "Mem_T.tagVARIANT"} x0: int);
VariantTimeToSystemTime({:scalar} x0: int, {:pointer} {:ptr "Mem_T._SYSTEMTIME"} {:ref "Mem_T._SYSTEMTIME"} x1: int) returns ({:scalar} r: int);
VectorFromBstr({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.PtagSAFEARRAY"} {:ref "Mem_T.PtagSAFEARRAY"} x1: int) returns ({:scalar} r: int);
VerSetConditionMask({:scalar} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
WRITE_PORT_UCHAR({:pointer} x0: int, {:scalar} x1: int);
WRITE_PORT_ULONG({:pointer} x0: int, {:scalar} x1: int);
WRITE_PORT_USHORT({:pointer} x0: int, {:scalar} x1: int);
WRITE_REGISTER_BUFFER_UCHAR({:pointer} {:ptr "Mem_T.INT4"} x0: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x1: int, {:scalar} x2: int);
WRITE_REGISTER_UCHAR({:pointer} x0: int, {:scalar} x1: int);
WRITE_REGISTER_ULONG({:pointer} {:ptr "Mem_T.INT4"} x0: int, {:scalar} x1: int);
WRITE_REGISTER_USHORT({:pointer} x0: int, {:scalar} x1: int);
WSAIoctl({:scalar} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T.VOID"} x4: int, {:scalar} x5: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x6: int, {:pointer} {:ptr "Mem_T._OVERLAPPED"} x7: int, {:scalar} x8: int) returns ({:scalar} r: int);
WSASetLastError({:scalar} x0: int);
WaitForMultipleObjectsEx({:scalar} x0: int, {:pointer} {:ptr "Mem_T.PVOID"} {:ref "Mem_T.PVOID"} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
WaitForSingleObject({:pointer} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
WaitForSingleObjectEx({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
WaitForThreadpoolWaitCallbacks({:pointer} x0: int, {:scalar} x1: int);
WdfGetLpcInterface({:pointer} {:ref "Mem_T.PIUMDFLPCInterface"} x0: int) returns ({:scalar} r: int);
WdfRegisterClassLibrary({:pointer} {:ref "Mem_T._WDF_CLASS_LIBRARY_INFO"} x0: int, {:pointer} x1: int, {:pointer} {:ref "Mem_T._UNICODE_STRING"} x2: int) returns ({:scalar} r: int);
WideCharToMultiByte({:scalar} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x4: int, {:scalar} x5: int, {:pointer} {:ptr "Mem_T.VOID"} x6: int, {:pointer} {:ptr "Mem_T.VOID"} x7: int) returns ({:scalar} r: int);
WinErrorToNtStatus({:scalar} x0: int) returns ({:scalar} r: int);
WmiCompleteRequest({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
WmiFireEvent({:pointer} {:ptr "Mem_T._DEVICE_OBJECT"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T.VOID"} x4: int) returns ({:scalar} r: int);
WmiSystemControl({:pointer} {:ref "Mem_T._WMILIB_CONTEXT"} x0: int, {:pointer} x1: int, {:pointer} x2: int, {:pointer} {:ref "Mem_T.INT4"} x3: int) returns ({:scalar} r: int);
WppAutoLogStart({:pointer} x0: int, {:pointer} x1: int, {:pointer} x2: int);
WppAutoLogStop({:pointer} x0: int, {:pointer} x1: int);
WppAutoLogTrace({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} x3: int, {:scalar} x4: int) returns ({:scalar} r: int);
WriteFile({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x3: int, {:pointer} {:ptr "Mem_T._OVERLAPPED"} x4: int) returns ({:scalar} r: int);
ZwClose({:pointer} x0: int) returns ({:scalar} r: int);
ZwCreateDirectoryObject({:pointer} {:ptr "Mem_T.PVOID"} {:ref "Mem_T.PVOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T._OBJECT_ATTRIBUTES"} {:ref "Mem_T._OBJECT_ATTRIBUTES"} x2: int) returns ({:scalar} r: int);
ZwCreateFile({:pointer} {:ref "Mem_T.PVOID"} x0: int, {:scalar} x1: int, {:pointer} {:ref "Mem_T._OBJECT_ATTRIBUTES"} x2: int, {:pointer} {:ref "Mem_T._IO_STATUS_BLOCK"} x3: int, {:pointer} x4: int, {:scalar} x5: int, {:scalar} x6: int, {:scalar} x7: int, {:scalar} x8: int, {:pointer} x9: int, {:scalar} x10: int) returns ({:scalar} r: int);
ZwCreateKey({:pointer} {:ptr "Mem_T.PVOID"} {:ref "Mem_T.PVOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T._OBJECT_ATTRIBUTES"} {:ref "Mem_T._OBJECT_ATTRIBUTES"} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T._UNICODE_STRING"} x4: int, {:scalar} x5: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x6: int) returns ({:scalar} r: int);
ZwDeleteKey({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
ZwEnumerateValueKey({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} x3: int, {:scalar} x4: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x5: int) returns ({:scalar} r: int);
ZwOpenKey({:pointer} {:ref "Mem_T.PVOID"} x0: int, {:scalar} x1: int, {:pointer} {:ref "Mem_T._OBJECT_ATTRIBUTES"} x2: int) returns ({:scalar} r: int);
ZwQuerySystemInformation({:scalar} x0: int, {:pointer} {:ref "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:pointer} {:ref "Mem_T.VOID"} x3: int) returns ({:scalar} r: int);
ZwQueryValueKey({:pointer} x0: int, {:pointer} {:ref "Mem_T._UNICODE_STRING"} x1: int, {:scalar} x2: int, {:pointer} x3: int, {:scalar} x4: int, {:pointer} {:ref "Mem_T.INT4"} x5: int) returns ({:scalar} r: int);
ZwReadFile({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int, {:pointer} x3: int, {:pointer} {:ref "Mem_T._IO_STATUS_BLOCK"} x4: int, {:pointer} x5: int, {:scalar} x6: int, {:pointer} {:ref "Mem_T._LARGE_INTEGER"} x7: int, {:pointer} x8: int) returns ({:scalar} r: int);
ZwSetValueKey({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T._UNICODE_STRING"} {:ref "Mem_T._UNICODE_STRING"} x1: int, {:scalar} x2: int, {:scalar} x3: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x4: int, {:scalar} x5: int) returns ({:scalar} r: int);
ZwWriteFile({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int, {:pointer} x3: int, {:pointer} {:ref "Mem_T._IO_STATUS_BLOCK"} x4: int, {:pointer} x5: int, {:scalar} x6: int, {:pointer} {:ref "Mem_T._LARGE_INTEGER"} x7: int, {:pointer} x8: int) returns ({:scalar} r: int);
_Getcoll() returns ({:scalar} r: int);
_Getctype() returns ({:scalar} r: int);
_Getcvt() returns ({:scalar} r: int);
_Getdateorder() returns ({:scalar} r: int);
_Getdays() returns ({:pointer} r: int);
_Getmonths() returns ({:pointer} r: int);
_Gettnames() returns ({:pointer} r: int);
_Getwctype({:scalar} x0: int, {:pointer} {:ptr "Mem_T._Ctypevec"} {:ref "Mem_T._Ctypevec"} x1: int) returns ({:scalar} r: int);
_Getwctypes({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:pointer} {:ptr "Mem_T._Ctypevec"} {:ref "Mem_T._Ctypevec"} x3: int) returns ({:pointer} r: int);
_Internal_lock_held_({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int);
_Internal_releases_lock_({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int);
_Mbrtowc({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x3: int, {:pointer} {:ptr "Mem_T._Cvtvec"} {:ref "Mem_T._Cvtvec"} x4: int) returns ({:scalar} r: int);
_Prefast_unreferenced_parameter_impl_({:pointer} x0: int);
_Stodx({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.PINT4"} {:ref "Mem_T.PINT4"} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x3: int) returns ({:scalar} r: int);
_Stofx({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.PINT4"} {:ref "Mem_T.PINT4"} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x3: int) returns ({:scalar} r: int);
_Stoldx({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.PINT4"} {:ref "Mem_T.PINT4"} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x3: int) returns ({:scalar} r: int);
_Stollx({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.PINT4"} {:ref "Mem_T.PINT4"} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x3: int) returns ({:scalar} r: int);
_Stolx({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.PINT4"} {:ref "Mem_T.PINT4"} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x3: int) returns ({:scalar} r: int);
_Stoullx({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.PINT4"} {:ref "Mem_T.PINT4"} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x3: int) returns ({:scalar} r: int);
_Stoulx({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.PINT4"} {:ref "Mem_T.PINT4"} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x3: int) returns ({:scalar} r: int);
_Strcoll({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:pointer} {:ptr "Mem_T.VOID"} x3: int, {:pointer} {:ptr "Mem_T._Collvec"} x4: int) returns ({:scalar} r: int);
_Strxfrm({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:pointer} {:ptr "Mem_T.VOID"} x3: int, {:pointer} {:ptr "Mem_T._Collvec"} x4: int) returns ({:scalar} r: int);
_Tolower({:scalar} x0: int, {:pointer} {:ptr "Mem_T._Ctypevec"} {:ref "Mem_T._Ctypevec"} x1: int) returns ({:scalar} r: int);
_Toupper({:scalar} x0: int, {:pointer} {:ptr "Mem_T._Ctypevec"} {:ref "Mem_T._Ctypevec"} x1: int) returns ({:scalar} r: int);
_Towlower({:scalar} x0: int, {:pointer} {:ptr "Mem_T._Ctypevec"} {:ref "Mem_T._Ctypevec"} x1: int) returns ({:scalar} r: int);
_Towupper({:scalar} x0: int, {:pointer} {:ptr "Mem_T._Ctypevec"} {:ref "Mem_T._Ctypevec"} x1: int) returns ({:scalar} r: int);
_Wcrtomb({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x2: int, {:pointer} {:ptr "Mem_T._Cvtvec"} {:ref "Mem_T._Cvtvec"} x3: int) returns ({:scalar} r: int);
_Wcscoll({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:pointer} {:ptr "Mem_T.VOID"} x3: int, {:pointer} {:ptr "Mem_T._Collvec"} x4: int) returns ({:scalar} r: int);
_Wcsxfrm({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:pointer} {:ptr "Mem_T.VOID"} x3: int, {:pointer} {:ptr "Mem_T._Collvec"} x4: int) returns ({:scalar} r: int);
__AnalysisAssumeNullterminated({:pointer} x0: int);
__HAVOC_malloc(size: int) returns (ret: int);
__HAVOC_malloc_full(size: int) returns (ret: int);
__PREfastPagedCode();
__acrt_iob_func({:scalar} x0: int) returns ({:pointer} r: int);
_beginthreadex({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} x3: int, {:scalar} x4: int, {:pointer} {:ptr "Mem_T.VOID"} x5: int) returns ({:scalar} r: int);
_chgsign({:scalar} x0: int) returns ({:scalar} r: int);
_copysign({:scalar} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
_fseeki64({:pointer} {:ptr "Mem_T._iobuf"} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
_gcvt_s({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
_get_errno({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
_getch() returns ({:scalar} r: int);
_gmtime64_s({:pointer} {:ptr "Mem_T.tm"} {:ref "Mem_T.tm"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int) returns ({:scalar} r: int);
_hypot({:scalar} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
_hypotf({:scalar} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
_i64toa_s({:scalar} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
_i64tow_s({:scalar} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
_invalid_parameter({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:scalar} x3: int, {:scalar} x4: int);
_itoa_s({:scalar} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
_itow_s({:scalar} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
_localtime64_s({:pointer} {:ptr "Mem_T.tm"} {:ref "Mem_T.tm"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int) returns ({:scalar} r: int);
_ltoa_s({:scalar} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
_ltow_s({:scalar} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
_mbclen({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
_mbslwr_s({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
_mbsupr_s({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
_mktime64({:pointer} {:ptr "Mem_T.tm"} {:ref "Mem_T.tm"} x0: int) returns ({:scalar} r: int);
_msize({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
_putws({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
_recalloc({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:pointer} r: int);
_set_errno({:scalar} x0: int) returns ({:scalar} r: int);
_strlwr_s({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
_strnicmp({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
_strupr_s({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
_swprintf_c_l({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:pointer} {:ptr "Mem_T.localeinfo_struct"} x3: int) returns ({:scalar} r: int);
_time64({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
_ui64toa_s({:scalar} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
_ui64tow_s({:scalar} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
_ultoa_s({:scalar} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
_ultow_s({:scalar} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
_vscprintf({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int) returns ({:scalar} r: int);
_vscwprintf({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int) returns ({:scalar} r: int);
_vsnprintf({:pointer} x0: int, {:scalar} x1: int, {:pointer} x2: int, {:pointer} x3: int) returns ({:scalar} r: int);
_vsnprintf_s({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} x3: int, {:pointer} {:ptr "Mem_T.VOID"} x4: int) returns ({:scalar} r: int);
_vsnwprintf({:pointer} x0: int, {:scalar} x1: int, {:pointer} x2: int, {:pointer} x3: int) returns ({:scalar} r: int);
_wcsicmp({:pointer} x0: int, {:pointer} x1: int) returns ({:scalar} r: int);
_wcsicoll({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int) returns ({:scalar} r: int);
_wcslwr({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:pointer} r: int);
_wcslwr_s({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
_wcsnicmp({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
_wcsnset({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:pointer} r: int);
_wcsnset_s({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
_wcsrev({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:pointer} r: int);
_wcsset_s({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
_wcsupr({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:pointer} r: int);
_wcsupr_s({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
_wfopen_s({:pointer} {:ptr "Mem_T.P_iobuf"} {:ref "Mem_T.P_iobuf"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int) returns ({:scalar} r: int);
_wmakepath_s({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:pointer} {:ptr "Mem_T.VOID"} x3: int, {:pointer} {:ptr "Mem_T.VOID"} x4: int, {:pointer} {:ptr "Mem_T.VOID"} x5: int) returns ({:scalar} r: int);
_wsplitpath_s({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} x3: int, {:scalar} x4: int, {:pointer} {:ptr "Mem_T.VOID"} x5: int, {:scalar} x6: int, {:pointer} {:ptr "Mem_T.VOID"} x7: int, {:scalar} x8: int) returns ({:scalar} r: int);
_wtoi({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
boogie_si_record_li2bpl_int(x: int);
calloc({:scalar} x0: int, {:scalar} x1: int) returns ({:pointer} r: int);
corralExplainErrorInit();
corral_nondet() returns ({:scalar} x: int);
dummy_for_pa();
exit({:scalar} x0: int);
fclose({:pointer} {:ptr "Mem_T._iobuf"} x0: int) returns ({:scalar} r: int);
feof({:pointer} {:ptr "Mem_T._iobuf"} x0: int) returns ({:scalar} r: int);
fgetc({:pointer} {:ptr "Mem_T._iobuf"} x0: int) returns ({:scalar} r: int);
fgetpos({:pointer} {:ptr "Mem_T._iobuf"} x0: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x1: int) returns ({:scalar} r: int);
fgetwc({:pointer} x0: int) returns ({:scalar} r: int);
fgetws({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T._iobuf"} x2: int) returns ({:pointer} r: int);
fputc({:scalar} x0: int, {:pointer} {:ptr "Mem_T._iobuf"} x1: int) returns ({:scalar} r: int);
fputwc({:scalar} x0: int, {:pointer} x1: int) returns ({:scalar} r: int);
free_newFname({:pointer} x0: int);
frexp({:scalar} x0: int, {:pointer} x1: int) returns ({:scalar} r: int);
fsetpos({:pointer} {:ptr "Mem_T._iobuf"} x0: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x1: int) returns ({:scalar} r: int);
fwrite({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T._iobuf"} x3: int) returns ({:scalar} r: int);
getc({:pointer} x0: int) returns ({:scalar} r: int);
imp_WppRecorderConfigure({:pointer} x0: int, {:pointer} {:ref "Mem_T._RECORDER_CONFIGURE_PARAMS"} x1: int);
imp_WppRecorderLogCreate({:pointer} x0: int, {:pointer} {:ref "Mem_T._RECORDER_LOG_CREATE_PARAMS"} x1: int, {:pointer} {:ref "Mem_T.PRECORDER_LOG__"} x2: int) returns ({:scalar} r: int);
imp_WppRecorderLogDelete({:pointer} x0: int, {:pointer} x1: int);
imp_WppRecorderLogGetDefault({:pointer} x0: int) returns ({:pointer} r: int);
imp_WppRecorderReplay({:pointer} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:scalar} x3: int);
iswdigit({:scalar} x0: int) returns ({:scalar} r: int);
iswspace({:scalar} x0: int) returns ({:scalar} r: int);
ldexp({:scalar} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
ldiv({:scalar} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
localeconv() returns ({:pointer} r: int);
lstrcmpiW({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int) returns ({:scalar} r: int);
lstrlenW({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
memchr({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int) returns ({:pointer} r: int);
memcpy_s({:pointer} x0: int, {:scalar} x1: int, {:pointer} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
memmove({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int) returns ({:pointer} r: int);
memmove_s({:pointer} x0: int, {:scalar} x1: int, {:pointer} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
modf({:scalar} x0: int, {:pointer} {:ref "Mem_T.INT4"} x1: int) returns ({:scalar} r: int);
printf({:pointer} x0: int) returns ({:scalar} r: int);
realloc({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int) returns ({:pointer} r: int);
setvbuf({:pointer} {:ptr "Mem_T._iobuf"} x0: int, {:pointer} {:ptr "Mem_T.INT4"} x1: int, {:scalar} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
sprintf({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int) returns ({:scalar} r: int);
sprintf_s({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int) returns ({:scalar} r: int);
strcat_s({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int) returns ({:scalar} r: int);
strcpy_s({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int) returns ({:scalar} r: int);
strncmp({:pointer} {:ref "Mem_T.INT4"} x0: int, {:pointer} {:ref "Mem_T.INT4"} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
strncpy_s({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
strnlen({:pointer} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
tolower({:scalar} x0: int) returns ({:scalar} r: int);
ungetc({:scalar} x0: int, {:pointer} {:ptr "Mem_T._iobuf"} x1: int) returns ({:scalar} r: int);
ungetwc({:scalar} x0: int, {:pointer} {:ptr "Mem_T._iobuf"} x1: int) returns ({:scalar} r: int);
vDbgPrintExWithPrefix({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:scalar} x2: int, {:pointer} {:ptr "Mem_T.VOID"} x3: int, {:pointer} {:ptr "Mem_T.VOID"} x4: int) returns ({:scalar} r: int);
vswprintf({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int) returns ({:scalar} r: int);
vswprintf_s({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:pointer} {:ptr "Mem_T.VOID"} x3: int) returns ({:scalar} r: int);
vwprintf({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int) returns ({:scalar} r: int);
wcscat_s({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int) returns ({:scalar} r: int);
wcschr({:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x0: int, {:scalar} x1: int) returns ({:pointer} r: int);
wcscoll({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int) returns ({:scalar} r: int);
wcscpy_s({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int) returns ({:scalar} r: int);
wcscspn({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int) returns ({:scalar} r: int);
wcsftime({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:scalar} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int, {:pointer} {:ptr "Mem_T.tm"} {:ref "Mem_T.tm"} x3: int) returns ({:scalar} r: int);
wcsncat({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int) returns ({:pointer} r: int);
wcsncat_s({:pointer} x0: int, {:scalar} x1: int, {:pointer} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
wcsncmp({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x1: int, {:scalar} x2: int) returns ({:scalar} r: int);
wcsncpy({:pointer} x0: int, {:pointer} x1: int, {:scalar} x2: int) returns ({:pointer} r: int);
wcsncpy_s({:pointer} x0: int, {:scalar} x1: int, {:pointer} x2: int, {:scalar} x3: int) returns ({:scalar} r: int);
wcsnlen({:pointer} x0: int, {:scalar} x1: int) returns ({:scalar} r: int);
wcspbrk({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int) returns ({:pointer} r: int);
wcsrchr({:pointer} {:ptr "Mem_T.VOID"} x0: int, {:scalar} x1: int) returns ({:pointer} r: int);
wcsspn({:pointer} x0: int, {:pointer} x1: int) returns ({:scalar} r: int);
wcsstr({:pointer} {:ptr "Mem_T.INT4"} x0: int, {:pointer} {:ptr "Mem_T.INT4"} {:ref "Mem_T.INT4"} x1: int) returns ({:pointer} r: int);
wcstok({:pointer} x0: int, {:pointer} x1: int) returns ({:pointer} r: int);
wcstok_s({:pointer} x0: int, {:pointer} x1: int, {:pointer} {:ref "Mem_T.PINT4"} x2: int) returns ({:pointer} r: int);
wctob({:scalar} x0: int) returns ({:scalar} r: int);
wprintf({:pointer} {:ptr "Mem_T.VOID"} x0: int) returns ({:scalar} r: int);
wvsprintfW({:pointer} {:ptr "Mem_T.VOID"} {:ref "Mem_T.VOID"} x0: int, {:pointer} {:ptr "Mem_T.VOID"} x1: int, {:pointer} {:ptr "Mem_T.VOID"} x2: int) returns ({:scalar} r: int);
