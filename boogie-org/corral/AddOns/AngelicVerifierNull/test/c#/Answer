As 
[TAG: AV_OUTPUT] ----- Analyzing testInst.bpl ------
[TAG: AV_OUTPUT] Found free variables :: inline$Test.Main_trace_1_trace_1$0$inline$Alloc$0$x
[TAG: AV_OUTPUT] ANGELIC_VERIFIER_WARNING: Failing traces {Trace0 }
[TAG: AV_OUTPUT] ANGELIC_VERIFIER_WARNING: Assertion failed in proc Test.Foo$System.Object with expr !(v_Ref == null)
As2 
[TAG: AV_OUTPUT] ----- Analyzing testInst.bpl ------
As3 
[TAG: AV_OUTPUT] ----- Analyzing testInst.bpl ------
[TAG: AV_OUTPUT] Found free variables :: inline$Test.Main$System.Stringarray_trace_1_trace_1$0$inline$Alloc$0$x
[TAG: AV_OUTPUT] ANGELIC_VERIFIER_WARNING: Failing traces {Trace0 }
[TAG: AV_OUTPUT] ANGELIC_VERIFIER_WARNING: Assertion failed in proc Test.bar$AbsClass with expr !(v_Ref == null)
Args 
[TAG: AV_OUTPUT] ----- Analyzing testInst.bpl ------
[TAG: AV_OUTPUT] EXPLAINERROR-BLOCK :: (forall x_2: Ref :: unknownTrigger_1(x_2) ==> $ArrayContents[x_2][0] != null)
[TAG: AV_OUTPUT] EXPLAINERROR-BLOCK :: (forall x_2: Ref :: unknownTrigger_1(x_2) ==> $ArrayContents[x_2][0] == $string_literal__0)
ex1 
[TAG: AV_OUTPUT] ----- Analyzing testInst.bpl ------
[TAG: AV_OUTPUT] ANGELIC_VERIFIER_WARNING: Failing traces {Trace0 }
[TAG: AV_OUTPUT] ANGELIC_VERIFIER_WARNING: Assertion failed in proc cMain.Main with expr F$cMain.s == 3
ex1 
[TAG: AV_OUTPUT] ----- Analyzing TestProgram.bpl ------
[TAG: AV_OUTPUT] EXPLAINERROR-BLOCK :: (forall x_1: int :: unknownTrigger_0(x_1) ==> 0 + 1 + 1 == x_1)
[TAG: AV_OUTPUT] EXPLAINERROR-BLOCK :: (forall x_1: int :: unknownTrigger_0(x_1) ==> 0 + 1 + 1 + 0 + 1 + 1 + 0 + 1 + 0 + 1 + 0 == x_1)
ex2 
[TAG: AV_OUTPUT] ----- Analyzing testInst.bpl ------
[TAG: AV_OUTPUT] ANGELIC_VERIFIER_WARNING: Failing traces {Trace0 }
[TAG: AV_OUTPUT] ANGELIC_VERIFIER_WARNING: Assertion failed in proc cMain.Main with expr s_int == 5
ex2 
[TAG: AV_OUTPUT] ----- Analyzing TestProgram.bpl ------
[TAG: AV_OUTPUT] EXPLAINERROR-BLOCK :: (forall x_1: int :: unknownTrigger_0(x_1) ==> Union2Int(Int2Union(2 * Union2Int(Int2Union(3)))) == x_1)
listsum 
[TAG: AV_OUTPUT] ----- Analyzing testInst.bpl ------
listsum2 
[TAG: AV_OUTPUT] ----- Analyzing testInst.bpl ------
[TAG: AV_OUTPUT] EXPLAINERROR-BLOCK :: (forall x_3: Ref :: unknownTrigger_2(x_3) ==> 0 + Union2Int(x_3) != 9)
[TAG: AV_OUTPUT] EXPLAINERROR-BLOCK :: (forall x_3: Ref, x_4: Ref :: unknownTrigger_2(x_3) && unknownTrigger_2(x_4) ==> 0 + Union2Int(x_3) + Union2Int(x_4) != 9)
[TAG: AV_OUTPUT] EXPLAINERROR-BLOCK :: (forall x_3: Ref, x_4: Ref, x_5: Ref :: unknownTrigger_2(x_3) && unknownTrigger_2(x_4) && unknownTrigger_2(x_5) ==> 0 + Union2Int(x_3) + Union2Int(x_4) + Union2Int(x_5) != 9)
[TAG: AV_OUTPUT] EXPLAINERROR-BLOCK :: (forall x_3: Ref, x_4: Ref, x_5: Ref, x_6: Ref :: unknownTrigger_2(x_3) && unknownTrigger_2(x_4) && unknownTrigger_2(x_5) && unknownTrigger_2(x_6) ==> 0 + Union2Int(x_3) + Union2Int(x_4) + Union2Int(x_5) + Union2Int(x_6) != 9)
foreach 
[TAG: AV_OUTPUT] ----- Analyzing testInst.bpl ------
foreach2 
[TAG: AV_OUTPUT] ----- Analyzing testInst.bpl ------
[TAG: AV_OUTPUT] EXPLAINERROR-BLOCK :: (forall x_2: Ref, x_3: Ref, x_4: Ref :: unknownTrigger_1(x_2) && unknownTrigger_1(x_3) && unknownTrigger_1(x_4) ==> 0 + Union2Int(x_2) + Union2Int(x_3) + Union2Int(x_4) != 9)
doublequestion 
[TAG: AV_OUTPUT] ----- Analyzing testInst.bpl ------
[TAG: AV_OUTPUT] ANGELIC_VERIFIER_WARNING: Failing traces {Trace0 }
[TAG: AV_OUTPUT] ANGELIC_VERIFIER_WARNING: Assertion failed in proc PoirotMain.F$IntContainer with expr !(ic_Ref == null)
ComplexExpr 
[TAG: AV_OUTPUT] ----- Analyzing testInst.bpl ------
[TAG: AV_OUTPUT] ANGELIC_VERIFIER_WARNING: Failing traces {Trace0 }
[TAG: AV_OUTPUT] ANGELIC_VERIFIER_WARNING: Assertion failed in proc PoirotMain.Main with expr y_bool
Set 
[TAG: AV_OUTPUT] ----- Analyzing testInst.bpl ------
[TAG: AV_OUTPUT] Found free variables :: inline$PoirotMain.Main_trace_1_trace_1$0$inline$Alloc$0$x inline$System.Collections.Generic.HashSet`1.New_trace_1_trace_1$0$inline$Alloc$0$x inline$System.Collections.Generic.HashSet`1.GetEnumerator_trace_1_trace_1$0$inline$Alloc$0$x inline$System.Collections.Generic.HashSet`1.GetEnumerator_trace_1_trace_1$0$inline$Alloc$1$x inline$PoirotMain.Main_trace_1_trace_1$0$inline$Alloc$1$x
[TAG: AV_OUTPUT] ANGELIC_VERIFIER_WARNING: Failing traces {Trace0 }
[TAG: AV_OUTPUT] ANGELIC_VERIFIER_WARNING: Assertion failed in proc PoirotMain.Main with expr $tmp12
String 
[TAG: AV_OUTPUT] ----- Analyzing testInst.bpl ------
[TAG: AV_OUTPUT] ANGELIC_VERIFIER_WARNING: Failing traces {Trace0 }
[TAG: AV_OUTPUT] ANGELIC_VERIFIER_WARNING: Assertion failed in proc Test.Main with expr s_int == 0
