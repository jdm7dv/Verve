<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Arachnode.DataAccess</name>
    </assembly>
    <members>
        <member name="T:Arachnode.DataAccess.ArachnodeDAO">
            <summary>
            	Contains all database access methods.  This class is not thread safe.
            </summary>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.#ctor">
            <summary>
            	Initializes a new instance of the <see cref="T:Arachnode.DataAccess.ArachnodeDAO"/> class.
            	This method does not initialize the ApplicationSettings or WebSettings classes.
            </summary>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <see cref="T:Arachnode.DataAccess.ArachnodeDAO"/> class.
            	This method does not initialize the ApplicationSettings or WebSettings classes.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.#ctor(System.Boolean,System.Boolean)">
            <summary>
            	Initializes a new instance of the <see cref="T:Arachnode.DataAccess.ArachnodeDAO"/> class.
            </summary>
            <param name="initializeApplicationConfiguration">if set to <c>true</c> [initialize application configuration].</param>
            <param name="initializeWebConfiguration">if set to <c>true</c> [initialize web configuration].</param>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            	Initializes a new instance of the <see cref="T:Arachnode.DataAccess.ArachnodeDAO"/> class.
            </summary>
            <param name="connectionString">The connection string.</param>
            <param name="initializeApplicationConfiguration">if set to <c>true</c> [initialize application configuration].</param>
            <param name="initializeWebConfiguration">if set to <c>true</c> [initialize web configuration].</param>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.UpdateCommandTimeout(System.Collections.Generic.IEnumerable{System.Data.IDbCommand})">
            <summary>
            	Updates the command timeout.
            </summary>
            <param name = "dbCommands">The db commands.</param>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.OpenCommandConnections(System.Collections.Generic.IEnumerable{System.Data.IDbCommand})">
            <summary>
            Opens all database connections.  Doing so before crawling allows CRUD operations to operate faster than opening and closing the connection each time an operation is requested.
            Extremely advanced...  ask if you have performance problems...
            </summary>
            <param name="dbCommands"></param>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.CloseCommandConnections(System.Collections.Generic.IEnumerable{System.Data.IDbCommand})">
            <summary>
            Closes all dastabase connections.  Called by the ArachnodeDAO destructor.
            Extremely advanced...  ask if you have performance problems...
            </summary>
            <param name="dbCommands"></param>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.DeleteCrawlRequest(System.String,System.String)">
            <summary>
            	Deletes a row from table 'CrawlRequests'.
            	Calling this method with absoluteUri1 set to 'null' and absoluteUri2 set to 'null' deletes all CrawlRequests from the 'CrawlRequests' table.
            </summary>
            <param name = "absoluteUri1">The absolute uri1.</param>
            <param name = "absoluteUri2">The absolute uri2.</param>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.DeleteDiscoveries">
            <summary>
            	Deletes all rows from table 'Discoveries'.
            </summary>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.DeleteWebPage(System.String)">
            <summary>
            	Deletes a row from table 'WebPages'.
            </summary>
            <param name = "webPageAbsoluteUriOrID">The WebPage AbsoluteUri or ID.</param>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.ExecuteSql(System.String)">
            <summary>
            	Executes dynamic SQL.
            </summary>
            <param name = "query">The query.</param>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.GetAllowedDataTypes">
            <summary>
            	DataTypes represent mappings between the ResponseHeader 'Content-type:' and the type to be used by SQL for Full-text indexing.
            	If you find that content you wish to crawl isn't being crawled, check the table 'DisallowedAbsoluteUris'.  If you see 'Disallowed by unassigned DataType', add the DataType to table 'AllowedDataTypes'.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.GetConfiguration">
            <summary>
            	Gets the configuration.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.GetCrawlActions">
            <summary>
            	Gets the crawl actions.  Used by the ActionManager.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.GetCrawlRules">
            <summary>
            	Gets the crawl rules.  Used by the RuleManager.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.GetContentTypes">
            <summary>
            	Gets all ContentTypes.
            	A ContentType would be text/html, image/jpeg, etc.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.GetCrawlRequests(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            	Returns a DataTable containing the database representation of a CrawlRequest.
            	This procedure creates CrawlRequests for the Engine to process from rows in table 'CrawlRequests'.
            </summary>
            <param name = "_maximumNumberOfCrawlRequestsToCreatePerBatch">See: ApplicationSettings.MaximumNumberOfCrawlRequestsToCreatePerBatch</param>
            <param name = "createCrawlRequestsFromDatabaseCrawlRequests">See: ApplicationSettings.CreateCrawlRequestsFromDatabaseCrawlRequests</param>
            <param name = "createCrawlRequestsFromDatabaseFiles">See: ApplicationSettings.CreateCrawlRequestsFromDatabaseFiles</param>
            <param name = "assignCrawlRequestPrioritiesForFiles">if set to <c>true</c> [assign crawl request priorities for files].</param>
            <param name = "createCrawlRequestsFromDatabaseHyperLinks">See: ApplicationSettings.CreateCrawlRequestsFromDatabaseHyperLinks</param>
            <param name = "assignCrawlRequestPrioritiesForHyperLinks">if set to <c>true</c> [assign crawl request priorities for hyper links].</param>
            <param name = "createCrawlRequestsFromDatabaseImages">if set to <c>true</c> [create crawl requests from database images].</param>
            <param name = "assignCrawlRequestPrioritiesForImages">if set to <c>true</c> [assign crawl request priorities for images].</param>
            <param name = "createCrawlRequestsFromDatabaseWebPages">See: ApplicationSettings.CreateCrawlRequestsFromDatabaseWebPages</param>
            <param name = "assignCrawlRequestPrioritiesForWebPages">if set to <c>true</c> [assign crawl request priorities for web pages].</param>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.GetDiscovery(System.String)">
            <summary>
            	Gets a Discovery from the Discoveries table.  If the Discovery isn't present, null is returned.
            	This method is used by the Cache to determine if a Discovery has been encountered in a crawl run.
            	If a Discovery hasn't been 'Discovered', then it is eligible to have a CrawlRequest created from it and to be crawled.
            </summary>
            <param name = "absoluteUri">The absolute URI.</param>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.GetDiscoveries(System.Int32)">
            <summary>
            	Gets the discoveries.
            </summary>
            <param name = "numberOfDiscoveriesToReturn">The number of discoveries to return.</param>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.GetDomains">
            <summary>
            	Gets all Domains.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.GetEngineActions">
            <summary>
            	Gets the engine actions.  Used by the ActionManager.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.GetExtensions">
            <summary>
            	Gets all Extensions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.GetFile(System.String)">
            <summary>
            	Selects a row from table 'Files' by AbsoluteUri or ID.
            </summary>
            <param name = "fileAbsoluteUriOrID">The file absolute URI or ID.</param>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.GetFileDiscoveries(System.Int64)">
            <summary>
            	Selects a row from table 'Files_Discoveries' by FileID.
            </summary>
            <param name = "fileID">The file ID.</param>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.GetHosts">
            <summary>
            	Gets all Hosts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.GetVersion">
            <summary>
            	Gets the Database Version.  Used by the Crawler to ensure the client is communicating with the proper Database Version.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.GetFileMetaData(System.Int64)">
            <summary>
            	Selects a row from table 'Files_MetaData' by FileID.
            </summary>
            <param name = "fileID">The file ID.</param>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.GetImage(System.String)">
            <summary>
            	Selects a row from table 'Images' by AbsoluteUri or ID.
            </summary>
            <param name = "imageAbsoluteUriOrID">The image absolute URI or ID.</param>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.GetImageDiscoveries(System.Int64)">
            <summary>
            	Selects a row from table 'Images_Discoveries' by ImageID.
            </summary>
            <param name = "imageID">The image ID.</param>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.GetImageMetaData(System.Int64)">
            <summary>
            	Selects a row from table 'Images_MetaData' by ImageID.
            </summary>
            <param name = "imageID">The image ID.</param>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.GetPriorities(System.Int32)">
            <summary>
            	Gets all Priorities.  Priorities are used by CrawlRequests, the ReportingManager and by the lucene.net indexing functionality
            	to determine crawl priority, and to enhance the boosts of lucene.net documents.  A document for "C#" from domain "XYZ" may score a higher
            	relevancy score than a document for "C#" from microsoft.com, but actual popularity/priority dictates that the result from microsoft.com should
            	receive a higher boost and thereby a higher overall relevancy score than the document from domain "XYZ".
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.GetSchemes">
            <summary>
            	Gets all Schemes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.GetWebPage(System.String)">
            <summary>
            	Selects a row from table 'WebPages' by AbsoluteUri or ID.
            </summary>
            <param name = "webPageAbsoluteUriOrID">The web page absolute URI or ID.</param>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.InsertCrawlRequest(System.DateTime,System.String,System.String,System.String,System.Int32,System.Int16,System.Int16,System.Double,System.Byte,System.Byte)">
            <summary>
            	Inserts the crawl request.
            	See: http://arachnode.net/forums/p/564/10762.aspx#10762 if you experience difficulty with this function.
            	Use this function if you want to insert CrawlRequests into the database.  The overload with the split 'currentDepth' and 'maximumDepth' parameters is intended for use by the Crawler itself.
            </summary>
            <param name = "created">The created.</param>
            <param name = "absoluteUri1">The absolute uri1.</param>
            <param name = "absoluteUri2">The absolute uri2.</param>
            <param name = "depth">The depth.</param>
            <param name = "restrictCrawlTo">The restrict crawl to.  Restricting a Crawl to a specific UriQualificationType means that the Crawl will only crawl WebPages that match the initial UriQualificationType.</param>
            <param name = "restrictDiscoveriesTo">The restrict discoveries to. Restricting a Crawl's Discoveries to a specific UriQualificationType means that the Crawl will only collect Discoveries that match the initial UriQualificationType.</param>
            <param name = "priority">The priority.</param>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.InsertCrawlRequest(System.DateTime,System.String,System.String,System.String,System.Int32,System.Int32,System.Int16,System.Int16,System.Double,System.Byte,System.Byte)">
            <summary>
            	Inserts a row into table 'CrawlRequests'.
            	See: http://arachnode.net/forums/p/564/10762.aspx#10762 if you experience difficulty with this function.
            	This is an advanced function, primarily intended for use by the Crawler.
            </summary>
            <param name = "created">The created.</param>
            <param name = "absoluteUri1">The absolute uri1.</param>
            <param name = "absoluteUri2">The absolute uri2.</param>
            <param name = "currentDepth">The current depth.</param>
            <param name = "maximumDepth">The maximum depth.</param>
            <param name = "restrictCrawlTo">The restrict crawl to.  Restricting a Crawl to a specific UriQualificationType means that the Crawl will only crawl WebPages that match the initial UriQualificationType.</param>
            <param name = "restrictDiscoveriesTo">The restrict discoveries to. Restricting a Crawl's Discoveries to a specific UriQualificationType means that the Crawl will only collect Discoveries that match the initial UriQualificationType.</param>
            <param name = "priority">The priority.</param>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.InsertDiscovery(System.Nullable{System.Int64},System.String,System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            	Inserts an AbsoluteUri into the Discoveries table.
            </summary>
            <param name = "discoveryID">The discovery ID.</param>
            <param name = "absoluteUri">The absolute URI.</param>
            <param name = "discoveryStateID">The discovery state ID.</param>
            <param name = "discoveryTypeID">The discovery type ID.</param>
            <param name = "expectFileOrImage">if set to <c>true</c> [expect file or image].</param>
            <param name = "numberOfTimesDiscovered">The number of times discovered.</param>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.InsertDisallowedAbsoluteUri(System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            	Inserts a row into table 'DisallowedAbsoluteUris'.
            </summary>
            <param name = "contentTypeID">The content type ID.</param>
            <param name = "discoveryTypeID">The discovery type ID.</param>
            <param name = "webPageAbsoluteUri">The web page absolute URI.</param>
            <param name = "disallowedAbsoluteUriAbsoluteUri">The disallowed absolute URI absolute URI.</param>
            <param name = "reason">The reason.</param>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.InsertDisallowedAbsoluteUriDiscovery(System.String,System.String)">
            <summary>
            	Inserts a row into table 'DisallowedAbsoluteUris_Discoveries'.
            </summary>
            <param name = "webPageAbsoluteUri">The AbsoluteUri of the WebPage where the DisallowedAbsoluteUri was discovered.</param>
            <param name = "disallowedAbsoluteUriAbsoluteUri">The AbsoluteUri of the DisallowedAbsoluteUri.</param>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.InsertEmailAddress(System.String,System.String)">
            <summary>
            	Inserts a row into table 'EmailAddresses'.
            </summary>
            <param name = "webPageAbsoluteUri">The AbsoluteUri of the WebPage where the EmailAddress was discovered.</param>
            <param name = "emailAddressAbsoluteUri">The AbsoluteUri of the EmailAddress.</param>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.InsertEmailAddressDiscovery(System.String,System.String)">
            <summary>
            	Inserts a row into table 'EmailAddresses_Discoveries'.
            </summary>
            <param name = "webPageAbsoluteUri">The AbsoluteUri of the WebPage where the EmailAddress was discovered.</param>
            <param name = "emailAddressAbsoluteUri">The AbsoluteUri of the EmailAddress.</param>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.InsertException(System.String,System.String,System.Exception,System.Boolean)">
            <summary>
            	Inserts a row into table 'Exceptions'.
            </summary>
            <param name = "absoluteUri1">The absolute uri1.</param>
            <param name = "absoluteUri2">The absolute uri2.</param>
            <param name = "exception">The exception.</param>
            <param name = "insertExceptionInWindowsApplicationLog">if set to <c>true</c> [insert exception in windows event log].</param>
            <returns>
            	The last ExceptionID returned from table 'Exceptions'.
            </returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.InsertExceptionIntoWindowsApplicationLog(System.Exception)">
            <summary>
            	Inserts the exception into the Windows 'Application' log.
            </summary>
            <param name = "exception">The exception.</param>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.InsertFile(System.String,System.String,System.String,System.Byte[],System.String)">
            <summary>
            	Inserts a row into table 'Files'.
            </summary>
            <param name = "webPageAbsoluteUri">The AbsoluteUri of the WebPage where the File was discovered.</param>
            <param name = "fileAbsoluteUri">The AbsoluteUri of the File.</param>
            <param name = "responseHeaders">The ResponseHeaders returned from the HttpRequest.</param>
            <param name = "source">The binary data of the File.</param>
            <param name = "fullTextIndexType">Full type of the text index.</param>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.InsertFileDiscovery(System.String,System.String)">
            <summary>
            	Inserts a row into table 'Files_Discoveries'.
            </summary>
            <param name = "webPageAbsoluteUri">The AbsoluteUri of the WebPage where the File was discovered.</param>
            <param name = "fileAbsoluteUri">The AbsoluteUri of the File.</param>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.InsertFileMetaData(System.String,System.Int64)">
            <summary>
            	Inserts a row into table 'Files_MetaData'.
            </summary>
            <param name = "fileAbsoluteUri">The AbsoluteUri of the File.</param>
            <param name = "fileID">The FileID of the File.</param>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.InsertHyperLink(System.String,System.String)">
            <summary>
            	Inserts a row into table 'HyperLinks'.
            </summary>
            <param name = "webPageAbsoluteUri">The AbsoluteUri of the WebPage where the HyperLink was discovered.</param>
            <param name = "hyperLinkAbsoluteUri">The AbsoluteUri of the HyperLink.</param>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.InsertHyperLinkDiscovery(System.String,System.String)">
            <summary>
            	Inserts a row into table 'HyperLinks_Discoveries'.
            </summary>
            <param name = "webPageAbsoluteUri">The AbsoluteUri of the WebPage where the HyperLink was discovered.</param>
            <param name = "hyperLinkAbsoluteUri">The AbsoluteUri of the HyperLink.</param>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.InsertImage(System.String,System.String,System.String,System.Byte[],System.String)">
            <summary>
            	Inserts a row into table 'Images'.
            </summary>
            <param name = "webPageAbsoluteUri">The AbsoluteUri of the WebPage where the Image was discovered.</param>
            <param name = "imageAbsoluteUri">The AbsoluteUri of the Image.</param>
            <param name = "responseHeaders">The ResponseHeaders returned from the HttpRequest.</param>
            <param name = "source">The binary data of the Image.</param>
            <param name = "fullTextIndexType">Full type of the text index.</param>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.InsertImageDiscovery(System.String,System.String)">
            <summary>
            	Inserts a row into table 'Images_Discoveries'.
            </summary>
            <param name = "webPageAbsoluteUri">The AbsoluteUri of the WebPage where the Image was discovered.</param>
            <param name = "imageAbsoluteUri">The AbsoluteUri of the Image.</param>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.InsertImageMetaData(System.String,System.Int64,System.String,System.Int32,System.Int32,System.Double,System.Double,System.Int32)">
            <summary>
            	Inserts a row into table 'Images_MetaData'.
            </summary>
            <param name = "imageAbsoluteUri">The AbsoluteUri of the Image.</param>
            <param name = "imageID">The ImageID of the Image.</param>
            <param name = "exifData">The ExifData of the Image.</param>
            <param name = "flags">The Flags of the Image.</param>
            <param name = "height">The Height of the Image.</param>
            <param name = "horizontalResolution">The HorizontalResolution of the Image.</param>
            <param name = "verticalResolution">The VerticalResoution of the Image.</param>
            <param name = "width">The Width of the Image.</param>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.InsertWebPage(System.String,System.String,System.Byte[],System.Int32,System.String,System.Int32)">
            <summary>
            	Inserts a row into table 'WebPages'.
            </summary>
            <param name = "webPageAbsoluteUri">The web page absolute URI.</param>
            <param name = "responseHeaders">The response headers.</param>
            <param name = "source">The source.</param>
            <param name = "codePage">The code page.</param>
            <param name = "fullTextIndexType">Full type of the text index.</param>
            <param name = "crawlDepth">The crawl depth.</param>
            <returns></returns>
        </member>
        <member name="M:Arachnode.DataAccess.ArachnodeDAO.InsertWebPageMetaData(System.Int64,System.String,System.Byte[],System.String)">
            <summary>
            	Inserts a row into table 'WebPages_MetaData'.
            </summary>
            <param name = "webPageID">The web page ID.</param>
            <param name = "webPageAbsoluteUri">The web page absolute URI.</param>
            <param name = "text">The text.</param>
            <param name = "xml">The XML.</param>
        </member>
        <member name="P:Arachnode.DataAccess.ArachnodeDAO.LastDisallowedAbsoluteUriID">
            <summary>
            	The last ExceptionID submitted to table 'DisallowedAbsoluteUris'.
            </summary>
            <value>The last disallowed absolute URI ID.</value>
        </member>
        <member name="P:Arachnode.DataAccess.ArachnodeDAO.LastEmailAddressID">
            <summary>
            	The last EmailAddressID submitted to table 'EmailAddresses'.
            </summary>
            <value>The last email address ID.</value>
        </member>
        <member name="P:Arachnode.DataAccess.ArachnodeDAO.LastExceptionID">
            <summary>
            	The last ExceptionID returned from table 'Exceptions'.
            </summary>
            <value>The last exception ID.</value>
        </member>
        <member name="P:Arachnode.DataAccess.ArachnodeDAO.LastExceptionMessage">
            <summary>
            	The last Message submitted to table 'Exceptions'.
            </summary>
            <value>The last exception message.</value>
        </member>
        <member name="P:Arachnode.DataAccess.ArachnodeDAO.LastFileID">
            <summary>
            	The last FileID submitted to table 'Files'.
            </summary>
            <value>The last file ID.</value>
        </member>
        <member name="P:Arachnode.DataAccess.ArachnodeDAO.LastHyperLinkID">
            <summary>
            	The last HyperLinksID submitted to table 'HyperLinks'.
            </summary>
            <value>The last hyper link ID.</value>
        </member>
        <member name="P:Arachnode.DataAccess.ArachnodeDAO.LastImageID">
            <summary>
            	The last ImageID submitted to table 'Images'.
            </summary>
            <value>The last image ID.</value>
        </member>
        <member name="P:Arachnode.DataAccess.ArachnodeDAO.LastWebPageID">
            <summary>
            	The last WebPageID submitted to table 'WebPages'.
            </summary>
        </member>
        <member name="M:Arachnode.DataAccess.Managers.ConfigurationManager.InitializeConfiguration(Arachnode.Configuration.Value.Enums.ConfigurationType,Arachnode.DataAccess.ArachnodeDAO)">
            <summary>
            	Initializes the configuration.
            </summary>
            <param name = "configurationType">Type of the configuration.</param>
            <param name = "arachnodeDAO">The arachnode DAO.</param>
        </member>
        <member name="M:Arachnode.DataAccess.Value.Exceptions.InvalidConfigurationException.#ctor(Arachnode.Configuration.ApplicationSettings,Arachnode.Configuration.WebSettings,System.String,Arachnode.DataAccess.Value.Enums.InvalidConfigurationExceptionSeverity)">
            <summary>
            	Initializes a new instance of the <see cref="T:Arachnode.DataAccess.Value.Exceptions.InvalidConfigurationException"/> class.
            </summary>
            <param name="applicationSettings">The application settings.</param>
            <param name="webSettings">The web settings.</param>
            <param name="message">The message.</param>
        </member>
    </members>
</doc>
